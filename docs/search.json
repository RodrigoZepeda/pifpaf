[{"path":"https://rodrigozepeda.github.io/pifpaf/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 pifpaf authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://rodrigozepeda.github.io/pifpaf/articles/Epidemiology-101.html","id":"abstract","dir":"Articles","previous_headings":"","what":"Abstract","title":"Epidemiology 101: The attributable and impact fractions","text":"quick introduction Population Attributable Fractions Potential Impact Fractions comparative risk assessment perspective.","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/articles/Epidemiology-101.html","id":"the-population-attributable-fraction","dir":"Articles","previous_headings":"","what":"The Population Attributable Fraction","title":"Epidemiology 101: The attributable and impact fractions","text":"Population Attributable Fraction (PAF) (Population Attributable Risk) quantifies proportion cases (either morbidity mortality) attributable exposure certain risk factor. PAF estimated constructing counterfactual scenario exposure risk factor Theoretical Minimum Risk Exposure Level (TMREL). level \\(0\\) exposure (e.g. lead cigarette smoke), ideal exposure level (e.g. sodium intake 2000 systolic blood pressure 120mmHg). PAF thus quantifies percent cases happen ideal scenario exposure level minimizes risk. section estimate population attributable fraction following three examples growing complexity. Note Gefeller (1992) counts 16 different names literature Population Attributable Fraction. include: ‘etiologic fraction’, ‘population attributable risk’, ‘attributable fraction’, ‘attributable risk’, ‘assigned share’.","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/articles/Epidemiology-101.html","id":"unrrealistic-example-with-an-ideal-population","dir":"Articles","previous_headings":"The Population Attributable Fraction","what":"Unrrealistic example with an ideal population","title":"Epidemiology 101: The attributable and impact fractions","text":"Consider population 100 individuals either current past smokers (Smoking status == Yes) never-smokers (Smoking status == ). population, total 33 individuals developed lung cancer 18 smokers. represented following figure:  population, probability developing cancer smoker 18 / 27 = 66.67% probability cancer smoker 15 / 73 = 20.55%. Hence ideal scenario, one ever smoked, expect around 20.55% cases among individuals (today) marked smokers. ideal scenario look like :  ideal scenario, 21 individuals develop lung cancer (vs 33 real population). 33 - 21 = 12 cases avoided exposure reduced minimum risk (case, smoking). 12 cases represent 36% cases (total 33). Thus population attributable fraction smoking case 36%. , 36% lung cancer cases population attributable smoking.","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/articles/Epidemiology-101.html","id":"example-with-binary-relative-risks","dir":"Articles","previous_headings":"The Population Attributable Fraction","what":"Example with binary relative risks","title":"Epidemiology 101: The attributable and impact fractions","text":"ideal realizations population don’t exist usually work relative risks construct . Following example now table form: relative risk (RR) lung cancer given smoking given classic formula: (18*73)/(58*27) = 3.2. , smoking results risk cancer 3.2 times larger smoking. populational average relative risk (\\(\\mathbb{E}[RR]\\)) given average risk whole population. corresponds weighted average relative risk exposure level. case: \\(\\mathbb{E}[RR] =\\) 3.2*(27/100) + 1*(73/100) = 1.6. relative risk 1 corresponding risk minimum-risk level: non_smokers’ reference risk. Finally, population attributable fraction defined populational average relative risk minus risk theoretical minimum risk level (1) divided populational average relative risk: \\[ \\textrm{PAF} = \\dfrac{\\mathbb{E}\\left[RR\\right] - 1}{\\mathbb{E}\\left[RR\\right]} \\] case: (3.2 - 1)/3.2 = 0.3726474. , 37% lung cancer cases population attributable smoking. Note Notice result almost one previous example (paf 36%). numbers differ rounding.","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/articles/Epidemiology-101.html","id":"math-a-note-about-the-formula","dir":"Articles","previous_headings":"The Population Attributable Fraction > Example with binary relative risks","what":"(Math) A note about the formula","title":"Epidemiology 101: The attributable and impact fractions","text":"can skip section formula \\[ \\textrm{PAF} = \\dfrac{\\mathbb{E}\\left[RR\\right] - 1}{\\mathbb{E}\\left[RR\\right]} \\] identical (different notation) one given MacMahon, Pugh, et al. (1970). shown Leviton (1973) equivalent Levin’s formula Levin (1953) usually taught epidemiology courses.","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/articles/Epidemiology-101.html","id":"example-with-categorical-relative-risks","dir":"Articles","previous_headings":"The Population Attributable Fraction","what":"Example with categorical relative risks","title":"Epidemiology 101: The attributable and impact fractions","text":"nuanced approach risk modelling model dose-dependent relative risks. case means modelling different relative risks accounting amount cigarettes. work, ’ll assume population measured amount cigarettes per day four categories 0 (non-smokers), < 5, 5-10 10+:  follwing table summarises number smokers per category also estimating relative risk non-smokers: relative risk function depends upon exposure. relative risks (even binary risks like previous example) functions. relative risk takes exposure level (can continuous, categorical binary) returns relative risk value according exposure level. interest resides population, utilice populational average relative risk, given weighted mean relative risk exposure levels. weights given exposure prevalence population. example results following expression: \\(\\mathbb{E}[RR] =\\) 1*(73/100) + 3.35*(16/100) + 3.65*(8/100) + 4.87*(3/100) = 1.7 population attributable fraction given difference relative risk theoretical minimum risk one divided populational average risk: \\(\\textrm{PAF} =\\) (1.7 - 1)/1.7 = 0.41. means 41% lung cancer cases population attributable smoking.","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/articles/Epidemiology-101.html","id":"math-a-note-about-the-formula-1","dir":"Articles","previous_headings":"The Population Attributable Fraction > Example with categorical relative risks","what":"(Math) A note about the formula","title":"Epidemiology 101: The attributable and impact fractions","text":"can skip section Note case categorical risks \\[ \\mathbb{E}[RR] =\\sum\\limits_{} p_i RR_i \\] \\(RR_i\\) relative risk \\(\\)-th category \\(p_i\\) proportion individuals category. formula attributable fraction case, \\[ \\textrm{PAF} = \\dfrac{\\mathbb{E}\\left[RR\\right] - 1}{\\mathbb{E}\\left[RR\\right]} \\] can thus rewritten form presented Walter (1976): \\[ \\textrm{PAF} = \\dfrac{\\sum_{}  p_i RR_i - 1}{\\sum\\limits_{} p_i RR_i } \\]","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/articles/Epidemiology-101.html","id":"code","dir":"Articles","previous_headings":"The Population Attributable Fraction > Example with categorical relative risks","what":"Code","title":"Epidemiology 101: The attributable and impact fractions","text":"See pifpaf::pif() implementation code.","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/articles/Epidemiology-101.html","id":"the-potential-impact-fraction","dir":"Articles","previous_headings":"","what":"The Potential Impact Fraction","title":"Epidemiology 101: The attributable and impact fractions","text":"Potential Impact Fraction (PIF) (Generalized Impact Fraction) represents generalization PAF. quantifies proportion disease (mortality) cases prevented changing exposure certain risk factor. example: intervention reduces population’s body mass index (BMI) 1 unit. ban smoking public spaces exposure second-hand cigarrete smoke halfed. change sodium consumption among high-dose consumers. NOTE PAF particular case PIF change exposure reduction theoretical minimum risk level. However, levels exposure possible. section ’ll go previous examples PAF , case, PIF.","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/articles/Epidemiology-101.html","id":"unrrealistic-example-with-a-counterfactual-population","dir":"Articles","previous_headings":"The Potential Impact Fraction","what":"Unrrealistic example with a counterfactual population","title":"Epidemiology 101: The attributable and impact fractions","text":"consider population 100 individuals divided smokers non-smokers. ’ll assume scenario public policy, reduced smoker prevalence 40%. mean 27 smokers population, 16 continue smoke intervention.  scenario, 28 individuals develop lung cancer (vs 33 real population). 5 cases represent 15%cases. Thus potential impact fraction reducing smoker population 40% 15%. , 15% lung cancer cases population avoided reduced amount smokers 40%.","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/articles/Epidemiology-101.html","id":"pif-example-with-binary-relative-risks","dir":"Articles","previous_headings":"The Potential Impact Fraction","what":"PIF example with binary relative risks","title":"Epidemiology 101: The attributable and impact fractions","text":"section follow example “Example binary relative risks”. section, concluded population’s relative risk 3.2. estimate potential impact fraction need compare population average relative risk population average relative risk counterfactual. , expected relative risk counterfactual scenario. population average relative risk estimated way : \\(\\mathbb{E}[RR] =\\) 3.2*(27/100) + 1*(73/100) = 1.6. population average relative risk counterfactual now uses fact 60% previous smokers remain smokers. implies smoking prevalences change: \\(\\mathbb{E}[RR_{cft}] =\\) 3.2*(0.6*27/100) + 1*(73 + 0.4*27)/100) = 1.4. Finally compare population average relative risks potential impact fraction: \\(\\text{PIF} = \\dfrac{\\mathbb{E}[RR] - \\mathbb{E}[RR_{cft}]}{\\mathbb{E}[RR]} =\\) (1.6 - 1.4)/1.6 = 0.149 , 15% cases reduced reducing population’s smoking prevalence 40%.","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/articles/Epidemiology-101.html","id":"pif-example-with-categorical-relative-risks","dir":"Articles","previous_headings":"The Potential Impact Fraction","what":"PIF example with categorical relative risks","title":"Epidemiology 101: The attributable and impact fractions","text":"section follow example “Example categorical relative risks”. ’ll build complex counterfactual example’s sake. consider 40% smokers <5 category stop smoking, 20% smokers 5-10 category stop smoking 10% smokers 10+ category stop cigarrete consumption. complement table previous section given : populational average relative risk case PAF: \\(\\mathbb{E}[RR] =\\) 1*(73/100) + 3.35*(16/100) + 3.65*(8/100) + 4.87*(3/100) = 1.7 population average relative risk counterfactual now uses expected prevalences counterfactual \\(\\mathbb{E}[RR_{cft}] =\\) 1*(81.3/100) + 3.35*(9.6/100) + 3.65*(6.4/100) + 4.87*(2.7/100) = 1.5 Finally plug results potential impact fraction: \\(\\text{PIF} = \\dfrac{\\mathbb{E}[RR] - \\mathbb{E}[RR_{cft}]}{\\mathbb{E}[RR]} =\\) (1.7 - 1.5)/1.7 = 0.118 , 12% cases reduced reducing population’s smoking prevalence according table:","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/articles/Epidemiology-101.html","id":"math-a-note-about-the-formula-2","dir":"Articles","previous_headings":"The Potential Impact Fraction > PIF example with categorical relative risks","what":"(Math) A note about the formula","title":"Epidemiology 101: The attributable and impact fractions","text":"can skip section Note population average relative risk counterfactual can written : \\[ \\mathbb{E}[RR_{cft}] =\\sum\\limits_{} p_i' RR_i \\] \\(RR_i\\) relative risk \\(\\)-th category \\(p'_i\\) proportion individuals category counterfactual scenario. formula potential impact fraction case, \\[ \\textrm{PIF} = \\dfrac{\\mathbb{E}\\left[RR\\right] - \\mathbb{E}\\left[RR_{cft}\\right]}{\\mathbb{E}\\left[RR\\right]} \\] equivalent (substitution) one frequently presented textbooks according Khosravi et al. (2021): \\[ \\textrm{PIF} = \\dfrac{\\sum_{} p_i RR_i - \\sum_{} p_i' RR_i }{\\sum_{} p_i RR_i}. \\] ### Code See pifpaf::pif() implementation code.","code":""},{"path":[]},{"path":"https://rodrigozepeda.github.io/pifpaf/articles/Epidemiology-101.html","id":"same-outcome-and-risk-factors-different-population","dir":"Articles","previous_headings":"Combining multiple fractions (multiple PIF or PAF)","what":"Same outcome and risk factors, different population","title":"Epidemiology 101: The attributable and impact fractions","text":"outcome risk factor (e.g. lung cancer mortality) population attributable fractions (respectively, potential impact fractions identical counterfactuals) can combined represent fractions disjointed populations. example, one can combine fraction men women multiplying fraction times proportion population: \\[ \\textrm{PAF}_{\\textrm{Total}} = p_{\\text{Men}} \\textrm{PAF}_{\\text{Men}} +  p_{\\text{Women}} \\textrm{PAF}_{\\text{Women}} \\] combine fractions across distinct age-groups multiplying times proportion population group: \\[ \\textrm{PAF}_{\\textrm{Total}} =  p_{\\text{age } 1} \\cdot \\textrm{PAF}_{\\text{age } 1} + p_{\\text{age } 2} \\cdot \\textrm{PAF}_{\\text{age } 2} + \\dots + p_{\\text{age } K} \\cdot \\textrm{PAF}_{\\text{age } K} \\] general, formula weighted sum fraction times population percent: \\[ \\textrm{PAF}_{\\textrm{Total}} = \\sum\\limits_{} p_i \\cdot \\textrm{PAF}_i \\] respectively: \\[ \\textrm{PIF}_{\\textrm{Total}} = \\sum\\limits_{} p_i \\cdot \\textrm{PIF}_i \\] Populations disjointed (case males individuals < 40yrs) summed people counted twice.","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/articles/Epidemiology-101.html","id":"same-outcome-and-population-different-risk-factors","dir":"Articles","previous_headings":"Combining multiple fractions (multiple PIF or PAF)","what":"Same outcome and population, different risk factors","title":"Epidemiology 101: The attributable and impact fractions","text":"population (e.g. mortality) multiple attributable fractions independent uncorrelated risk factors can combined. example one can combine population attributable mortality lead exposure radiation exposure cancer (assuming exposure uncorrelated population) multiplying Ezzati et al. (2003): \\[ \\textrm{PAF}_{\\text{Total}} = 1 - (1 - \\textrm{PAF}_{\\text{Lead}})\\times(1 - \\textrm{PAF}_{\\text{Radiation}}) \\] general multiple uncorrelated risk factors formula : \\[ \\textrm{PAF}_{\\text{Total}} = 1 - \\prod\\limits_{k} (1 - \\textrm{PAF}_k) \\] formula also applies Potential Impact Fractions: \\[ \\textrm{PIF}_{\\text{Total}} = 1 - \\prod\\limits_{k} (1 - \\textrm{PIF}_k) \\] \\(\\textrm{PIF}_k\\) represents impact fraction category \\(k\\).","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/articles/Epidemiology-101.html","id":"code-1","dir":"Articles","previous_headings":"Combining multiple fractions (multiple PIF or PAF) > Same outcome and population, different risk factors","what":"Code","title":"Epidemiology 101: The attributable and impact fractions","text":"See pifpaf::pif_combine() implementation code.","code":""},{"path":[]},{"path":"https://rodrigozepeda.github.io/pifpaf/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Rodrigo Zepeda-Tello. Author, maintainer. Dalia Camacho-García-Formentí. Author. Tonatiuh Barrientos-Gutiérrez. Contributor. Ana Basto-Abreu. Contributor. Ariela Braverman-Bronstein. Contributor. Dèsirée Vidaña-Pérez. Contributor. Frederick Cudhea. Contributor.","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Zepeda-Tello R, Camacho-García-Formentí D (2023). pifpaf: Potential Impact Fraction Population Attributable Fraction Cross-Sectional Data. R package version 2.0.0, https://rodrigozepeda.github.io/pifpaf/.","code":"@Manual{,   title = {pifpaf: Potential Impact Fraction and Population Attributable Fraction from Cross-Sectional Data},   author = {Rodrigo Zepeda-Tello and Dalia Camacho-García-Formentí},   year = {2023},   note = {R package version 2.0.0},   url = {https://rodrigozepeda.github.io/pifpaf/}, }"},{"path":"https://rodrigozepeda.github.io/pifpaf/index.html","id":"pifpaf-estimation-of-potential-impact-fractions-pif-and-population-attributable-fractions-paf-","dir":"","previous_headings":"","what":"pifpaf package","title":"pifpaf package","text":"STILL WORK PROCESS pifpaf package corresponds update previous homonimous package developed INSP.","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/index.html","id":"the-purpose-of-the-pifpaf-package","dir":"","previous_headings":"","what":"The purpose of the pifpaf package","title":"pifpaf package","text":"pifpaf package allows users estimate population attributable fraction, pif, potential impact fraction, paf, cross-sectional studies come survey design using bootstrap algorithms @heeringa2015attributable. two main scenarios use package: using individual-level data survey determine exposure independent source determine relative risk associated exposure (say metanalysis). case one use pif() paf(). using aggregated data survey determine exposure independent source determine relative risk associated exposure (say metanalysis). case one use pif_approximate() paf_approximate().","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"pifpaf package","text":"can install development version pifpaf GitHub :","code":"#install.packages(\"remotes\") remotes::install_github(\"RodrigoZepeda/pifpaf\", dependencies = TRUE)"},{"path":"https://rodrigozepeda.github.io/pifpaf/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"pifpaf package","text":"main purpose package calculate potential impact fractions population attributable fractions specific case: exposure information comes cross-sectional studies (particular, surveys) relative risk information literature (e.g. metanalysis). package assume user access data either individual-level exposure (e.g. user access survey) user access aggregated data exposure (e.g. user population-mean exposure confidence interval). following table shows function use depending case: Note user available individual-level aggregated data prefer individual-level information captures better sample’s variability. population attributable fraction potential impact fractions estimated aggregated data approximations biased estimates.","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/index.html","id":"individual-level-data","dir":"","previous_headings":"","what":"Individual-level data","title":"pifpaf package","text":"case individual-level data Population Attributable Fraction (PAF) Potential Impact Fraction (PIF) can estimated directly via pif() paf() functions. purpose example, use data Mexican National Health Nutrition Survey 2018 (ENSANUT 2018): data contains information age, sex, weight (grams), hypertension status, systolic blood pressure change sodium policy intervention.","code":"data(ensanut) head(ensanut) #>   age    sex    weight strata hypertension delta_na_phase_1 #> 1  28 Female  32133.58    222        FALSE         5.899257 #> 2  24 Female  75955.15    222        FALSE        19.112181 #> 3  45 Female  16075.99    222        FALSE        49.546444 #> 4  39   Male  83462.51    222        FALSE         6.273072 #> 5  41   Male  84734.87    223        FALSE         0.000000 #> 6  61   Male 118740.93    223        FALSE         0.000000 #>   systolic_blood_pressure age_group #> 1                   118.0   [25,30) #> 2                    92.0   [20,25) #> 3                    93.0   [45,50) #> 4                   116.0   [35,40) #> 5                   110.5   [40,45) #> 6                   122.5   [60,65)"},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://rodrigozepeda.github.io/pifpaf/index.html","id":"other-r-packages","dir":"","previous_headings":"","what":"Other R packages","title":"pifpaf package","text":"graphPAF Allows estimation population attributable fractions. Can use data cross sectional, case-control, cohort studies. can also estimate multiple risk factors time. Doesn’t allow estimation potential impact fractions. AF @dahlqwist2016model allows user utilize cross sectional, case-control, cohort studies binary exposures. causalPAF allows estimation population attributable fractions given causal diagram. pifpaf homonymous package using methods approximate. However, doesn’t allow survey data changes relative risk function. WORK PROGRESS","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/as.data.frame.pif_class.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform to data.frame — as.data.frame.pif_class","title":"Transform to data.frame — as.data.frame.pif_class","text":"Method transforming potential impact fraction population attributable fraction data.frame","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/as.data.frame.pif_class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform to data.frame — as.data.frame.pif_class","text":"","code":"# S3 method for pif_class as.data.frame(x, ...)"},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/as.data.frame.pif_class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform to data.frame — as.data.frame.pif_class","text":"x pif_class object ... Additional methods pass summary.pif_class()","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/as.data.frame.pif_class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transform to data.frame — as.data.frame.pif_class","text":"","code":"#Example 1 data(ensanut) options(survey.lonely.psu = \"adjust\") design <- survey::svydesign(data = ensanut, ids = ~1, weights = ~weight, strata = ~strata) rr <- function(X, theta) {   exp(-2 +     theta[1] * X[, \"age\"] + theta[2] * X[, \"systolic_blood_pressure\"] / 100) } cft <- function(X) {   X[, \"systolic_blood_pressure\"] <- X[, \"systolic_blood_pressure\"] - 5   return(X) } pifsim <- pif(design,   theta = log(c(1.05, 1.38)), rr, cft,   additional_theta_arguments = c(0.01, 0.03), n_bootstrap_samples = 10, ) #> Loading required package: foreach #> Loading required package: future as.data.frame(pifsim) #>     counterfactual   relative_risk potential_impact_fraction #> 1 Counterfactual_1 Relative_Risk_1               0.016495618 #> 2 Counterfactual_1 Relative_Risk_1               0.005181433 #> 3 Counterfactual_1 Relative_Risk_1               0.027809803 #>   average_relative_risk average_counterfactual           type #> 1              142.4008               140.6641 point_estimate #> 2             -594.5198              -587.7990     Lower 2.5% #> 3              879.3214               869.1272    Upper 97.5%"},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/coef.pif_class.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract point estimate of potential impact fraction or population attributable fraction — coef.pif_class","title":"Extract point estimate of potential impact fraction or population attributable fraction — coef.pif_class","text":"Method obtaining point estimate pif_class object (.e. point-estimate potential impact fraction population attributable fraction via bootstrap).","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/coef.pif_class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract point estimate of potential impact fraction or population attributable fraction — coef.pif_class","text":"","code":"# S3 method for pif_class coef(x, ...)"},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/coef.pif_class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract point estimate of potential impact fraction or population attributable fraction — coef.pif_class","text":"x pif_class object ... additional arguments base::mean()","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/coef.pif_class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract point estimate of potential impact fraction or population attributable fraction — coef.pif_class","text":"","code":"#Example 1 data(ensanut) options(survey.lonely.psu = \"adjust\") design <- survey::svydesign(data = ensanut, ids = ~1, weights = ~weight, strata = ~strata) rr <- function(X, theta) {   exp(-2 +     theta[1] * X[, \"age\"] + theta[2] * X[, \"systolic_blood_pressure\"] / 100) } cft <- function(X) {   X[, \"systolic_blood_pressure\"] <- X[, \"systolic_blood_pressure\"] - 5   return(X) } pifsim <- pif(design,   theta = log(c(1.05, 1.38)), rr, cft,   additional_theta_arguments = c(0.01, 0.03), n_bootstrap_samples = 10, ) coef(pifsim) #>     counterfactual   relative_risk potential_impact_fraction #> 1 Counterfactual_1 Relative_Risk_1                0.01730326 #>   average_relative_risk average_counterfactual #> 1               528.266               519.5432"},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/confint.pif_class.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract confidence intervals for the potential impact fraction or the\npopulation attributable fraction — confint.pif_class","title":"Extract confidence intervals for the potential impact fraction or the\npopulation attributable fraction — confint.pif_class","text":"Method obtaining confidence intervals pif_class object","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/confint.pif_class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract confidence intervals for the potential impact fraction or the\npopulation attributable fraction — confint.pif_class","text":"","code":"# S3 method for pif_class confint(x, parm = NULL, level = 0.95, method = c(\"wald\", \"percentile\"), ...)"},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/confint.pif_class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract confidence intervals for the potential impact fraction or the\npopulation attributable fraction — confint.pif_class","text":"x pif_class object parm specification parameters given confidence intervals, either vector numbers vector names. missing, parameters considered. level (double) Confidence level uncertainty interval. Defaults 0.95. method (string) either 'wald' (recommended) 'percentile' uncertainty intervals based upon bootstrap's percentile Wald-type approximation (see confidence interval section) ... additional methods pass mean() stats::sd() wald stats::quantile() percentile type intervals","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/confint.pif_class.html","id":"confidence-intervals","dir":"Reference","previous_headings":"","what":"Confidence Intervals","title":"Extract confidence intervals for the potential impact fraction or the\npopulation attributable fraction — confint.pif_class","text":"Confidence intervals estimated via two methods specified Arnab (2017) . Wald-type confidence intervals (precise) form: \\[ \\widehat{\\text{PIF}} \\pm t_{1 - \\alpha/2} \\sqrt{\\widehat{\\text{Var}}_{\\text{B}}\\big[\\widehat{\\text{PIF}}\\big]} \\] \\(t_{1 - \\alpha/2}\\) stands percent points level \\(1 - \\alpha/2\\) Student's t-distribution, \\(\\widehat{\\text{Var}}_{\\text{B}}\\big[\\widehat{\\text{PIF}}\\big]\\) represents estimated variance (via bootstrap) potential impact fraction estimator. Percentile confidence intervals (less precise) form: \\[ \\Big[\\widehat{\\text{PIF}}_{\\text{B},\\alpha/2}, \\widehat{\\text{PIF}}_{\\text{B},1-\\alpha/2}\\Big] \\] \\(\\widehat{\\text{PIF}}_{\\text{B},k}\\) represents kth sample quantile bootstrap simulation potential impact fraction estimator.","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/confint.pif_class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract confidence intervals for the potential impact fraction or the\npopulation attributable fraction — confint.pif_class","text":"","code":"#Example 1 data(ensanut) options(survey.lonely.psu = \"adjust\") design <- survey::svydesign(data = ensanut, ids = ~1, weights = ~weight, strata = ~strata) rr <- function(X, theta) {   exp(-2 +     theta[1] * X[, \"age\"] + theta[2] * X[, \"systolic_blood_pressure\"] / 100) } cft <- function(X) {   X[, \"systolic_blood_pressure\"] <- X[, \"systolic_blood_pressure\"] - 5   return(X) } pifsim <- pif(design,   theta = log(c(1.05, 1.38)), rr, cft,   additional_theta_arguments = c(0.01, 0.03), n_bootstrap_samples = 10, ) confint(pifsim) #>     counterfactual   relative_risk potential_impact_fraction #> 1 Counterfactual_1 Relative_Risk_1               -0.01341996 #> 2 Counterfactual_1 Relative_Risk_1                0.03826853 #>   average_relative_risk average_counterfactual        type #> 1             -1697.331              -1645.505  Lower 2.5% #> 2              2686.984               2606.830 Upper 97.5%"},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/diagnostic_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Diagnostic bootstrap plots for pif_class — diagnostic_plot","title":"Diagnostic bootstrap plots for pif_class — diagnostic_plot","text":"Creates ggplot2::ggplot() object containing diagnostic plots convergence population attributable fraction potential impact fraction","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/diagnostic_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Diagnostic bootstrap plots for pif_class — diagnostic_plot","text":"","code":"diagnostic_plot(x, relative_risks = NULL, counterfactuals = NULL, level = 0.95)"},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/diagnostic_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Diagnostic bootstrap plots for pif_class — diagnostic_plot","text":"x pif_class object relative_risks Vector relative risk names plot (set NULL plot ) counterfactuals Vector counterfactual names plot (set NULL plot ) level (double) Level quantiles plot (default 0.95)","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/diagnostic_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Diagnostic bootstrap plots for pif_class — diagnostic_plot","text":"ggplot2 object caterpillar plots assess convergence","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/diagnostic_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Diagnostic bootstrap plots for pif_class — diagnostic_plot","text":"","code":"# EXAMPLE 1 # Setup the survey design data(ensanut) options(survey.lonely.psu = \"adjust\") design <- survey::svydesign(data = ensanut, ids = ~1, weights = ~weight, strata = ~strata)  # Calculate two different relative risks rr <- list(  function(X, theta) {exp(theta[1] * X[, \"systolic_blood_pressure\"] / 100)},  function(X, theta) {exp(theta[2] * X[, \"systolic_blood_pressure\"] / 100 + theta[3]* X[,\"age\"])} )  # Calculate three counterfactual scenarios of SBP reduction from 1 to 3 mmhg cft <- list( function(X){X[, \"systolic_blood_pressure\"]  <- X[, \"systolic_blood_pressure\"]  - 1; return(X)}, function(X){X[, \"systolic_blood_pressure\"]  <- X[, \"systolic_blood_pressure\"]  - 2; return(X)}, function(X){X[, \"systolic_blood_pressure\"]  <- X[, \"systolic_blood_pressure\"]  - 3; return(X)} )  my_pif <- pif(design,   theta = log(c(1.05, 1.38, 1.21)), rr, cft,   additional_theta_arguments = c(0.01, 0.03, 0.025),   n_bootstrap_samples = 10, ) diagnostic_plot(my_pif)"},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/ensanut.html","id":null,"dir":"Reference","previous_headings":"","what":"ENSANUT 2018 — ensanut","title":"ENSANUT 2018 — ensanut","text":"Data Mexican National Health Nutrition Survey 2018 (ENSANUT-2018).","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/ensanut.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ENSANUT 2018 — ensanut","text":"","code":"ensanut"},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/ensanut.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"ENSANUT 2018 — ensanut","text":"Information contains: tibble containing following information age Age individual (years). sex Sex individual (Male Female). weight Survey weights associated survey. strata Strata survey. hypertension individual hypertension TRUE, FALSE otherwise. delta_na_phase_1 Proposed change sodium consumption (counterfactual). systolic_blood_pressure Mean systolic blood pressure individual registered survey. age_group Age group individual","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/ensanut.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ENSANUT 2018 — ensanut","text":"","code":"ensanut #> # A tibble: 1,333 × 8 #>      age sex     weight strata hypertension delta_na_phase_1 #>    <dbl> <chr>    <dbl>  <dbl> <lgl>                   <dbl> #>  1    28 Female  32134.    222 FALSE                    5.90 #>  2    24 Female  75955.    222 FALSE                   19.1  #>  3    45 Female  16076.    222 FALSE                   49.5  #>  4    39 Male    83463.    222 FALSE                    6.27 #>  5    41 Male    84735.    223 FALSE                    0    #>  6    61 Male   118741.    223 FALSE                    0    #>  7    46 Female  44085.    223 FALSE                   40.0  #>  8    48 Female  73051.    223 FALSE                   79.4  #>  9    23 Female  26276.    122 FALSE                   26.2  #> 10    69 Female  52114.    122 FALSE                    8.69 #> # ℹ 1,323 more rows #> # ℹ 2 more variables: systolic_blood_pressure <dbl>, age_group <fct> # Create a survey design as follows: options(survey.lonely.psu = \"adjust\") design <- survey::svydesign(data = ensanut, ids = ~1, weights = ~weight, strata = ~strata)"},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/estimator_se_from_ci.html","id":null,"dir":"Reference","previous_headings":"","what":"Mean estimator's standard error from asymptotically normal confidence interval — estimator_se_from_ci","title":"Mean estimator's standard error from asymptotically normal confidence interval — estimator_se_from_ci","text":"Auxiliary function estimate standard error (variance divided sample size) asymptotically normal confidence interval level 1 - alpha implementing following function: \\[  \\text{se} = \\dfrac{U - L}{2\\cdot Z_{1 - \\alpha/2}} \\] U L upper lower bounds interval","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/estimator_se_from_ci.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mean estimator's standard error from asymptotically normal confidence interval — estimator_se_from_ci","text":"","code":"estimator_se_from_ci(upper_limit, lower_limit, confidence_level = 0.95)"},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/estimator_se_from_ci.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mean estimator's standard error from asymptotically normal confidence interval — estimator_se_from_ci","text":"upper_limit Upper bound confidence interval lower_limit Lower bound confidence interval confidence_level Confidence level confidence interval","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/estimator_se_from_ci.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mean estimator's standard error from asymptotically normal confidence interval — estimator_se_from_ci","text":"standard error estimator","code":""},{"path":[]},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/estimator_se_from_ci.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mean estimator's standard error from asymptotically normal confidence interval — estimator_se_from_ci","text":"","code":"# Calculate the confidence interval for a normal mean x <- rnorm(100) interval_mu_x <- t.test(x)$conf.int estimator_se_from_ci(interval_mu_x[1], interval_mu_x[2], 0.95) #> [1] -0.09608871"},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/estimator_var_from_ci.html","id":null,"dir":"Reference","previous_headings":"","what":"Mean estimator's variance from asymptotically normal confidence interval — estimator_var_from_ci","title":"Mean estimator's variance from asymptotically normal confidence interval — estimator_var_from_ci","text":"Auxiliary function estimate estimator's variance (_i.e. standard error squared) asymptotically normal confidence interval level 1 - alpha implementing following function: \\[  \\text{var} = \\Bigg(\\dfrac{U - L}{2\\cdot Z_{1 - \\alpha/2}}\\Bigg)^2 \\] U L upper lower bounds interval","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/estimator_var_from_ci.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mean estimator's variance from asymptotically normal confidence interval — estimator_var_from_ci","text":"","code":"estimator_var_from_ci(upper_limit, lower_limit, confidence_level = 0.95)"},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/estimator_var_from_ci.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mean estimator's variance from asymptotically normal confidence interval — estimator_var_from_ci","text":"upper_limit Upper bound confidence interval lower_limit Lower bound confidence interval confidence_level Confidence level confidence interval","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/estimator_var_from_ci.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mean estimator's variance from asymptotically normal confidence interval — estimator_var_from_ci","text":"variance estimator","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/estimator_var_from_ci.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Mean estimator's variance from asymptotically normal confidence interval — estimator_var_from_ci","text":"Remember variance mean-estimator asymptotically normal confidence intervals estimator's standard error squared","code":""},{"path":[]},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/estimator_var_from_ci.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mean estimator's variance from asymptotically normal confidence interval — estimator_var_from_ci","text":"","code":"# Calculate the confidence interval for a normal mean x <- rnorm(100) interval_mu_x <- t.test(x)$conf.int estimator_var_from_ci(interval_mu_x[1], interval_mu_x[2], 0.95) #> [1] 0.008076336"},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/get_bootstrap_simulations.html","id":null,"dir":"Reference","previous_headings":"","what":"Get bootstrap simulations from pif and paf — get_bootstrap_simulations","title":"Get bootstrap simulations from pif and paf — get_bootstrap_simulations","text":"Returns bootstrap simulations pif paf","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/get_bootstrap_simulations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get bootstrap simulations from pif and paf — get_bootstrap_simulations","text":"","code":"get_bootstrap_simulations(object)"},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/get_bootstrap_simulations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get bootstrap simulations from pif and paf — get_bootstrap_simulations","text":"object pif_class object","code":""},{"path":[]},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/get_bootstrap_simulations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get bootstrap simulations from pif and paf — get_bootstrap_simulations","text":"","code":"#Example 1 data(ensanut) options(survey.lonely.psu = \"adjust\") design <- survey::svydesign(data = ensanut, ids = ~1, weights = ~weight, strata = ~strata) rr <- function(X, theta) {   exp(-2 +     theta[1] * X[, \"age\"] + theta[2] * X[, \"systolic_blood_pressure\"] / 100) } cft <- function(X) {   X[, \"systolic_blood_pressure\"] <- X[, \"systolic_blood_pressure\"] - 5   return(X) } pifsim <- pif(design,   theta = log(c(1.05, 1.38)), rr, cft,   additional_theta_arguments = c(0.01, 0.03), n_bootstrap_samples = 10, ) get_bootstrap_simulations(pifsim) #>           potential_impact_fraction average_relative_risk #> result.1                0.018602291             2.1635133 #> result.2                0.012191399             3.9309001 #> result.3                0.013969539             2.8501448 #> result.4                0.025763340          1079.4053898 #> result.5                0.011599829            11.1565398 #> result.6                0.006881619             0.2263781 #> result.7                0.009452571             2.6595716 #> result.8                0.025531238           166.0541858 #> result.9                0.007304812           577.7690080 #> result.10               0.012049900           161.2211139 #>           average_counterfactual   counterfactual   relative_risk #> result.1               2.1232670 Counterfactual_1 Relative_Risk_1 #> result.2               3.8829769 Counterfactual_1 Relative_Risk_1 #> result.3               2.8103295 Counterfactual_1 Relative_Risk_1 #> result.4            1051.5963012 Counterfactual_1 Relative_Risk_1 #> result.5              11.0271259 Counterfactual_1 Relative_Risk_1 #> result.6               0.2248202 Counterfactual_1 Relative_Risk_1 #> result.7               2.6344318 Counterfactual_1 Relative_Risk_1 #> result.8             161.8146169 Counterfactual_1 Relative_Risk_1 #> result.9             573.5485140 Counterfactual_1 Relative_Risk_1 #> result.10            159.2784155 Counterfactual_1 Relative_Risk_1"},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/get_fraction_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Get whether object is population attributable fraction or potential impact fraction — get_fraction_type","title":"Get whether object is population attributable fraction or potential impact fraction — get_fraction_type","text":"Returns whether pif_class object specified creator population attributable fraction potential impact fraction","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/get_fraction_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get whether object is population attributable fraction or potential impact fraction — get_fraction_type","text":"","code":"get_fraction_type(object)"},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/get_fraction_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get whether object is population attributable fraction or potential impact fraction — get_fraction_type","text":"object pif_class object","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/get_fraction_type.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get whether object is population attributable fraction or potential impact fraction — get_fraction_type","text":"","code":"#Example 1 data(ensanut) options(survey.lonely.psu = \"adjust\") design <- survey::svydesign(data = ensanut, ids = ~1, weights = ~weight, strata = ~strata) rr <- function(X, theta) {   exp(-2 +     theta[1] * X[, \"age\"] + theta[2] * X[, \"systolic_blood_pressure\"] / 100) } cft <- function(X) {   X[, \"systolic_blood_pressure\"] <- X[, \"systolic_blood_pressure\"] - 5   return(X) } pifsim <- pif(design,   theta = log(c(1.05, 1.38)), rr, cft,   additional_theta_arguments = c(0.01, 0.03), n_bootstrap_samples = 10, ) get_fraction_type(pifsim) #> [1] \"Potential Impact Fraction (PIF)\""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/get_pif_simulations.html","id":null,"dir":"Reference","previous_headings":"","what":"Get bootstrap simulations exclusively from pif and paf — get_pif_simulations","title":"Get bootstrap simulations exclusively from pif and paf — get_pif_simulations","text":"Returns bootstrap simulations pif paf","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/get_pif_simulations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get bootstrap simulations exclusively from pif and paf — get_pif_simulations","text":"","code":"get_pif_simulations(object)"},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/get_pif_simulations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get bootstrap simulations exclusively from pif and paf — get_pif_simulations","text":"object pif_class object","code":""},{"path":[]},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/get_pif_simulations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get bootstrap simulations exclusively from pif and paf — get_pif_simulations","text":"","code":"#Example 1 data(ensanut) options(survey.lonely.psu = \"adjust\") design <- survey::svydesign(data = ensanut, ids = ~1, weights = ~weight, strata = ~strata) rr <- function(X, theta) {   exp(-2 +     theta[1] * X[, \"age\"] + theta[2] * X[, \"systolic_blood_pressure\"] / 100) } cft <- function(X) {   X[, \"systolic_blood_pressure\"] <- X[, \"systolic_blood_pressure\"] - 5   return(X) } pifsim <- pif(design,   theta = log(c(1.05, 1.38)), rr, cft,   additional_theta_arguments = c(0.01, 0.03), n_bootstrap_samples = 10, ) get_pif_simulations(pifsim) #>           potential_impact_fraction   counterfactual   relative_risk #> result.1                0.003669701 Counterfactual_1 Relative_Risk_1 #> result.2                0.032820408 Counterfactual_1 Relative_Risk_1 #> result.3                0.004224853 Counterfactual_1 Relative_Risk_1 #> result.4                0.029365131 Counterfactual_1 Relative_Risk_1 #> result.5                0.034605423 Counterfactual_1 Relative_Risk_1 #> result.6                0.025889297 Counterfactual_1 Relative_Risk_1 #> result.7                0.023133935 Counterfactual_1 Relative_Risk_1 #> result.8                0.021832001 Counterfactual_1 Relative_Risk_1 #> result.9                0.009654618 Counterfactual_1 Relative_Risk_1 #> result.10               0.014331641 Counterfactual_1 Relative_Risk_1"},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/get_theta_simulations.html","id":null,"dir":"Reference","previous_headings":"","what":"Get bootstrap simulations for theta — get_theta_simulations","title":"Get bootstrap simulations for theta — get_theta_simulations","text":"Returns bootstrap simulations parameter theta pif paf","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/get_theta_simulations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get bootstrap simulations for theta — get_theta_simulations","text":"","code":"get_theta_simulations(object)"},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/get_theta_simulations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get bootstrap simulations for theta — get_theta_simulations","text":"object pif_class object","code":""},{"path":[]},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/get_theta_simulations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get bootstrap simulations for theta — get_theta_simulations","text":"","code":"#Example 1 data(ensanut) options(survey.lonely.psu = \"adjust\") design <- survey::svydesign(data = ensanut, ids = ~1, weights = ~weight, strata = ~strata) rr <- function(X, theta) {   exp(-2 +     theta[1] * X[, \"age\"] + theta[2] * X[, \"systolic_blood_pressure\"] / 100) } cft <- function(X) {   X[, \"systolic_blood_pressure\"] <- X[, \"systolic_blood_pressure\"] - 5   return(X) } pifsim <- pif(design,   theta = log(c(1.05, 1.38)), rr, cft,   additional_theta_arguments = c(0.01, 0.03), n_bootstrap_samples = 10, ) get_theta_simulations(pifsim) #>              [,1]      [,2] #>  [1,]  0.04483706 0.4694029 #>  [2,]  0.22994161 0.5410407 #>  [3,] -0.03102961 0.2832526 #>  [4,]  0.03558302 0.3630293 #>  [5,]  0.01817947 0.1265165 #>  [6,] -0.11991251 0.2198062 #>  [7,]  0.18327962 0.1596576 #>  [8,]  0.04848339 0.4604968 #>  [9,]  0.03726730 0.5005335 #> [10,] -0.08353623 0.5187293"},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/internal_pif_data_frame.html","id":null,"dir":"Reference","previous_headings":"","what":"Pif from data.frame — internal_pif_data_frame","title":"Pif from data.frame — internal_pif_data_frame","text":"Pif data.frame","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/internal_pif_data_frame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pif from data.frame — internal_pif_data_frame","text":"","code":"internal_pif_data_frame(df, theta, rr, cft, weights = NULL, is_paf = FALSE)"},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/internal_pif_data_frame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pif from data.frame — internal_pif_data_frame","text":"df data.frame run pif function. theta (vector/double) parameters relative risk function rr. rr (function/list) relative risk function two parameters: data.frame called X containing individual-level exposure covariates, theta (order). can also list several relative risk functions apply function different modelling scenario. cft (function/list) counterfactual function takes data.frame, X, individual-level exposure covariates returns new data.frame individual-level counterfactual exposure covariates. can also list several counterfactual functions apply function different modelling scenario. weights (vector) following recommended version use svydesign object design can still use weights associate weights estimation. Beware might give accurate estimations variance uncertainty intervals. is_paf (boolean) Whether function estimated Population Attributable Fraction (is_paf = TRUE) Potential Impact Fraction (is_paf = FALSE)","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/internal_pif_data_frame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pif from data.frame — internal_pif_data_frame","text":"vector object containing simulation pif (respectively paf), populational average relative risk populational average counterfactual.","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/internal_pif_data_frame.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Pif from data.frame — internal_pif_data_frame","text":"previous version package function called pif.empirical.","code":""},{"path":[]},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/is_paf.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if object is population attributable fraction — is_paf","title":"Check if object is population attributable fraction — is_paf","text":"Method checking whether object population attributable fraction","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/is_paf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if object is population attributable fraction — is_paf","text":"","code":"is_paf(x)"},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/is_paf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if object is population attributable fraction — is_paf","text":"x object","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/is_paf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if object is population attributable fraction — is_paf","text":"Boolean whether object potential impact fraction .","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/is_paf.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Check if object is population attributable fraction — is_paf","text":"population attributable fraction type potential impact fraction is_pif method return TRUE even estimating paf().","code":""},{"path":[]},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/is_paf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if object is population attributable fraction — is_paf","text":"","code":"#Example 1 data(ensanut) options(survey.lonely.psu = \"adjust\") design <- survey::svydesign(data = ensanut, ids = ~1, weights = ~weight, strata = ~strata) rr <- function(X, theta) {   exp(-2 +     theta[1] * X[, \"age\"] + theta[2] * X[, \"systolic_blood_pressure\"] / 100) } pafsim <- paf(design,   theta = log(c(1.05, 1.38)), rr,   additional_theta_arguments = c(0.01, 0.03), n_bootstrap_samples = 10, ) is_paf(pafsim) #> [1] TRUE"},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/is_pif.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if object is potential impact fraction — is_pif","title":"Check if object is potential impact fraction — is_pif","text":"Method checking whether object potential impact fraction","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/is_pif.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if object is potential impact fraction — is_pif","text":"","code":"is_pif(x)"},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/is_pif.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if object is potential impact fraction — is_pif","text":"x object","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/is_pif.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if object is potential impact fraction — is_pif","text":"Boolean whether object potential impact fraction .","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/is_pif.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Check if object is potential impact fraction — is_pif","text":"population attributable fraction type potential impact fraction is_pif method return TRUE even estimating paf().","code":""},{"path":[]},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/is_pif.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if object is potential impact fraction — is_pif","text":"","code":"#Example 1 data(ensanut) options(survey.lonely.psu = \"adjust\") design <- survey::svydesign(data = ensanut, ids = ~1, weights = ~weight, strata = ~strata) rr <- function(X, theta) {   exp(-2 +     theta[1] * X[, \"age\"] + theta[2] * X[, \"systolic_blood_pressure\"] / 100) } cft <- function(X) {   X[, \"systolic_blood_pressure\"] <- X[, \"systolic_blood_pressure\"] - 5   return(X) } pifsim <- pif(design,   theta = log(c(1.05, 1.38)), rr, cft,   additional_theta_arguments = c(0.01, 0.03), n_bootstrap_samples = 10, ) is_pif(pifsim) #> [1] TRUE"},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/mean.pif_class.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract mean of bootstrap simulations of potential impact fraction or population\nattributable fraction — mean.pif_class","title":"Extract mean of bootstrap simulations of potential impact fraction or population\nattributable fraction — mean.pif_class","text":"Method obtaining arithmetic mean bootstrap simulations pif_class object (.e. point-estimate potential impact fraction population attributable fraction via bootstrap).","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/mean.pif_class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract mean of bootstrap simulations of potential impact fraction or population\nattributable fraction — mean.pif_class","text":"","code":"# S3 method for pif_class mean(x, ...)"},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/mean.pif_class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract mean of bootstrap simulations of potential impact fraction or population\nattributable fraction — mean.pif_class","text":"x pif_class object ... additional arguments pass base::mean()","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/mean.pif_class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract mean of bootstrap simulations of potential impact fraction or population\nattributable fraction — mean.pif_class","text":"","code":"#Example 1 data(ensanut) options(survey.lonely.psu = \"adjust\") design <- survey::svydesign(data = ensanut, ids = ~1, weights = ~weight, strata = ~strata) rr <- function(X, theta) {   exp(-2 +     theta[1] * X[, \"age\"] + theta[2] * X[, \"systolic_blood_pressure\"] / 100) } cft <- function(X) {   X[, \"systolic_blood_pressure\"] <- X[, \"systolic_blood_pressure\"] - 5   return(X) } pifsim <- pif(design,   theta = log(c(1.05, 1.38)), rr, cft,   additional_theta_arguments = c(0.01, 0.03), n_bootstrap_samples = 10, ) mean(pifsim) #>     counterfactual   relative_risk potential_impact_fraction #> 1 Counterfactual_1 Relative_Risk_1                 0.0137558 #>   average_relative_risk average_counterfactual #> 1              140698.1               138207.6"},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/n_bootstrap.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract number of bootstrap simulations — n_bootstrap","title":"Extract number of bootstrap simulations — n_bootstrap","text":"Method obtaining number bootstrap simulations used construct pif_class object.","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/n_bootstrap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract number of bootstrap simulations — n_bootstrap","text":"","code":"n_bootstrap(x)"},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/n_bootstrap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract number of bootstrap simulations — n_bootstrap","text":"x pif_class object","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/n_bootstrap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract number of bootstrap simulations — n_bootstrap","text":"","code":"#Example 1 options(survey.lonely.psu = \"adjust\") design <- survey::svydesign(data = ensanut, ids = ~1, weights = ~weight, strata = ~strata) rr <- function(X, theta) {   exp(-2 +     theta[1] * X[, \"age\"] + theta[2] * X[, \"systolic_blood_pressure\"] / 100) } cft <- function(X) {   X[, \"systolic_blood_pressure\"] <- X[, \"systolic_blood_pressure\"] - 5   return(X) } pifsim <- pif(design,   theta = log(c(1.05, 1.38)), rr, cft,   additional_theta_arguments = c(0.01, 0.03), n_bootstrap_samples = 10, ) n_bootstrap(pifsim) #> [1] 10"},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/overall_fraction_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Joint PIF/PAF type — overall_fraction_type","title":"Joint PIF/PAF type — overall_fraction_type","text":"Function determines whether collection potential impact fractions population attributable fractions pif paf","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/overall_fraction_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Joint PIF/PAF type — overall_fraction_type","text":"","code":"overall_fraction_type(...)"},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/overall_fraction_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Joint PIF/PAF type — overall_fraction_type","text":"... pif_class objects (.e. estimations pif paf)","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/overall_fraction_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Joint PIF/PAF type — overall_fraction_type","text":"pif_aggregated object estimating potential impact fraction individual-level data multiple distinct impact fractions.","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/overall_fraction_type.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Joint PIF/PAF type — overall_fraction_type","text":"references Rd macro \\insertAllCites help page.","code":""},{"path":[]},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/overall_fraction_type.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Joint PIF/PAF type — overall_fraction_type","text":"","code":"# Use the ensanut dataset data(ensanut)  # EXAMPLE 1 # Setup the survey design options(survey.lonely.psu = \"adjust\") design <- survey::svydesign(data = ensanut, ids = ~1, weights = ~weight, strata = ~strata) rr_1 <- function(X, theta) {   exp(-2 +     theta[1] * X[, \"age\"] + theta[2] * X[, \"systolic_blood_pressure\"] / 100) }  rr_2 <- function(X, theta) {   exp(-1 +     theta[1] * X[, \"age\"] ) }  rr_3 <- function(X, theta) {   exp(-3 +     theta[1] * X[, \"age\"] ) }  cft <- function(X) {   X[, \"systolic_blood_pressure\"] <- X[, \"systolic_blood_pressure\"] - 5   return(X) }  pif_1 <- pif(design,   theta = log(c(1.25, 1.68)), rr_1, cft,   additional_theta_arguments = c(0.01, 0.03), n_bootstrap_samples = 10, )  pif_2 <- pif(design,   theta = log(c(1.12, 1.45)), rr_2, cft,   additional_theta_arguments = c(0.02, 0.025), n_bootstrap_samples = 10, )  pif_3 <- pif(design,   theta = log(c(2.25, 2.57)), rr_3, cft,   additional_theta_arguments = c(0.01, 0.025), n_bootstrap_samples = 10, )  overall_fraction_type(pif_1, pif_2, pif_3) #> [1] \"Potential Impact Fraction (PIF)\""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/paf.html","id":null,"dir":"Reference","previous_headings":"","what":"Population Attributable Fraction — paf","title":"Population Attributable Fraction — paf","text":"Estimates population attributable fraction, paf, individual-level exposure data (covariates), X, cross-sectional survey. Exposure assumed associated relative risk function, rr, parameter theta. counterfactual scenario function exposure cft assumed. population attributable fraction defined Chan et al. (2023)  :   \\[  \\text{PAF} = \\dfrac{\\mathbb{E}\\Big[RR(X;\\theta)\\Big] - 1}{\\mathbb{E}\\Big[RR(X;\\theta)\\Big]} \\] : \\(X\\) denotes individual-level matrix exposure covariates, \\(\\theta\\) represents additional parameters relative risk function, \\(RR(X,\\theta)\\) denotes relative risk exposure (covariates) level \\(X\\) given parameters \\(\\theta\\), \\({\\mathbb{E}\\Big[RR(X;\\theta)\\Big]}\\) represents average relative risk population \\(1\\) represents relative risk theoretical minimum risk scenario, \\(\\text{PAF}\\) represents population attributable fraction","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/paf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Population Attributable Fraction — paf","text":"","code":"paf(   design,   theta,   rr,   additional_theta_arguments,   n_bootstrap_samples = NULL,   theta_distribution = \"default\",   weights = NULL,   .options.future = list(seed = TRUE),   ... )"},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/paf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Population Attributable Fraction — paf","text":"design (survey.design, data.frame,tibble, svyrep.design) survey data structure. data comes survey set design survey::svydesign(). can also support survey::svrepdesign() design survey comes replicates. Finally, model can also accommodate data.frame tibble weights assuming simple random sampling without replacement. theta (vector/double) parameters relative risk function rr. rr (function/list) relative risk function two parameters: data.frame called X containing individual-level exposure covariates, theta (order). can also list several relative risk functions apply function different modelling scenario. additional_theta_arguments additional information theta utilized obtaining bootstrap samples paramter. Options : (double) variance theta theta one dimensional asymptotical normality assumed (default). (vector) variances entry theta theta n-dimensional entries uncorrelated asymptotical normality assumed (default). (matrix) variance-covariance matrix theta theta n-dimensional entries correlated asymptotical normality assumed (default). list arguments pass via base::.call() theta_distribution simulate samples theta theta assumed asymptotically normally distributed. Optional n_bootstrap_samples (double) number bootstrap samples. svyrep.design passed argument, n_bootstrap_samples represents number number replicates design. theta_distribution (function) random number generator follows distribution estimator theta. default, theta assumed asymptotically normal thus theta_distribution set mvtnorm::rmvnorm() variance given additional_theta_arguments. number simulations theta_distribution function must parametrized parameter name n. weights (vector) following recommended version use svydesign object design can still use weights associate weights estimation. Beware might give accurate estimations variance uncertainty intervals. .options.future List additional options doFuture::%dofuture%(). ... Additional parameters svrep::as_bootstrap_design().","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/paf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Population Attributable Fraction — paf","text":"pif_class() object containing bootstrap simulations population attributable fraction, average relative risk.","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/paf.html","id":"additional-parallelization-options","dir":"Reference","previous_headings":"","what":"Additional parallelization options","title":"Population Attributable Fraction — paf","text":"Faster computation occurs parallelization allows use cores machine. Parallelization utilizes  future::future() package. paralelization work need establish plan (see future::plan() information). common way create parallelization local machine :","code":"plan(multisession) #Start parallelization pif(...) plan(sequential) #Return to 'normal'"},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/paf.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Population Attributable Fraction — paf","text":"Chan CE, Zepeda-Tello R, Camacho-García-Formentí D, Cudhea F, Meza R, Rodrigues E, Spiegelman D, Barrientos-Gutierrez T, Zhou X (2023). “Nonparametric Estimation Potential Impact Fraction Population Attributable Fraction Individual-Level Aggregated Data.” 2207.03597.","code":""},{"path":[]},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/paf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Population Attributable Fraction — paf","text":"","code":"# Use the ensanut dataset data(ensanut)  # EXAMPLE 1 # Setup the survey design options(survey.lonely.psu = \"adjust\") design <- survey::svydesign(data = ensanut, ids = ~1, weights = ~weight, strata = ~strata) rr <- function(X, theta) {   exp(     theta[1] * X[, \"age\"] + theta[2] * X[, \"systolic_blood_pressure\"] / 100) } paf(design,   theta = log(c(1.05, 1.38)), rr,   additional_theta_arguments = c(0.01, 0.03), n_bootstrap_samples = 10, ) #> ── Population Attributable Fraction (PAF) ────────────────────────────────────── #>                   counterfactual   relative_risk #> 1 Theoretical_minimum_risk_level Relative_Risk_1 #> 2 Theoretical_minimum_risk_level Relative_Risk_1 #> 3 Theoretical_minimum_risk_level Relative_Risk_1 #>   population_attributable_fraction average_relative_risk average_counterfactual #> 1                        -10.15319              56724.76                      1 #> 2                        -71.39238            -233921.36                      1 #> 3                         51.08599             347370.87                      1 #>             type #> 1 point_estimate #> 2     Lower 2.5% #> 3    Upper 97.5% #> ──────────────────────────────────────────────────────────────────────────────── #> • Number of bootstrap simulations: 10 #> ✖ A low number of bootstrap simulations will result in an unstable estimate. #> • Use `as.data.frame` to access values. #> • Use `summary` to save list of main results.  # EXAMPLE 2 # Now do the same but using a replicate design options(survey.lonely.psu = \"adjust\") rep_design <- svrep::as_bootstrap_design(design, replicates = 10) paf(rep_design,   theta = log(c(1.05, 1.38)), rr,   additional_theta_arguments = c(0.01, 0.03) ) #> ── Population Attributable Fraction (PAF) ────────────────────────────────────── #>                   counterfactual   relative_risk #> 1 Theoretical_minimum_risk_level Relative_Risk_1 #> 2 Theoretical_minimum_risk_level Relative_Risk_1 #> 3 Theoretical_minimum_risk_level Relative_Risk_1 #>   population_attributable_fraction average_relative_risk average_counterfactual #> 1                         -2.58360              38075.31                      1 #> 2                        -23.23141            -186912.70                      1 #> 3                         18.06421             263063.32                      1 #>             type #> 1 point_estimate #> 2     Lower 2.5% #> 3    Upper 97.5% #> ──────────────────────────────────────────────────────────────────────────────── #> • Number of bootstrap simulations: 10 #> ✖ A low number of bootstrap simulations will result in an unstable estimate. #> • Use `as.data.frame` to access values. #> • Use `summary` to save list of main results."},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/paf_combine.html","id":null,"dir":"Reference","previous_headings":"","what":"Joint PAF: Combine attributable fractions from independent and uncorrelated risk factors — paf_combine","title":"Joint PAF: Combine attributable fractions from independent and uncorrelated risk factors — paf_combine","text":"function combine multiple attributable fractions independent uncorrelated risk factors. function follows formula Ezzati et al. (2003) :   \\[  \\text{PAF} = 1 - \\prod\\limits_{k} \\big(1 - \\text{PAF}_i) \\]","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/paf_combine.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Joint PAF: Combine attributable fractions from independent and uncorrelated risk factors — paf_combine","text":"","code":"paf_combine(paf_class_1, paf_class_2, ...)"},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/paf_combine.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Joint PAF: Combine attributable fractions from independent and uncorrelated risk factors — paf_combine","text":"paf_class_1 pif_class object (.e. estimation paf) paf_class_2 Another pif_class object (.e. estimation different paf) ... Additional pif_class objects (.e. estimations paf)","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/paf_combine.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Joint PAF: Combine attributable fractions from independent and uncorrelated risk factors — paf_combine","text":"paf_aggregated object estimating population attributable fraction individual-level data multiple distinct attributable fractions.","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/paf_combine.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Joint PAF: Combine attributable fractions from independent and uncorrelated risk factors — paf_combine","text":"Ezzati M, Vander Hoorn S, Rodgers , Lopez AD, Mathers CD, Murray CJ (2003). “Estimates global regional potential health gains reducing multiple major risk factors.” Lancet, 362(9380), 271--280.","code":""},{"path":[]},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/paf_combine.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Joint PAF: Combine attributable fractions from independent and uncorrelated risk factors — paf_combine","text":"","code":"# Use the ensanut dataset data(ensanut)  # EXAMPLE 1 # Setup the survey design options(survey.lonely.psu = \"adjust\") design <- survey::svydesign(data = ensanut, ids = ~1, weights = ~weight, strata = ~strata) rr_1 <- function(X, theta) {   exp(-2 +     theta[1] * X[, \"age\"] + theta[2] * X[, \"systolic_blood_pressure\"] / 100) }  rr_2 <- function(X, theta) {   exp(-1 +     theta[1] * X[, \"age\"] + X[, \"systolic_blood_pressure\"] ) }  rr_3 <- function(X, theta) {   exp(-1 +     theta[1] *X[, \"systolic_blood_pressure\"] ) }  paf_1 <- paf(design,   theta = log(c(1.25, 1.68)), rr_1,   additional_theta_arguments = c(0.01, 0.03), n_bootstrap_samples = 10, )  paf_2 <- paf(design,   theta = log(c(1.12, 1.45)), rr_2,   additional_theta_arguments = c(0.02, 0.025), n_bootstrap_samples = 10, )  paf_3 <- paf(design,   theta = 0.24, rr_3,   additional_theta_arguments = 0.01, n_bootstrap_samples = 10, )  paf_combine(paf_1, paf_2, paf_3) #> ── Population Attributable Fraction (PAF) ────────────────────────────────────── #> # A tibble: 3 × 4 #>   counterfactual                 relative_risk   population_attributable…¹ type  #>   <chr>                          <chr>                               <dbl> <chr> #> 1 Theoretical_minimum_risk_level Relative_Risk_1                         1 poin… #> 2 Theoretical_minimum_risk_level Relative_Risk_1                         1 Lowe… #> 3 Theoretical_minimum_risk_level Relative_Risk_1                         1 Uppe… #> # ℹ abbreviated name: ¹​population_attributable_fraction #> ──────────────────────────────────────────────────────────────────────────────── #> • Number of bootstrap simulations: 10 #> ✖ A low number of bootstrap simulations will result in an unstable estimate. #> • Use `as.data.frame` to access values. #> • Use `summary` to save list of main results."},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/pif.html","id":null,"dir":"Reference","previous_headings":"","what":"Potential Impact Fraction — pif","title":"Potential Impact Fraction — pif","text":"Estimates potential impact fraction, pif, individual-level exposure data (covariates), X, cross-sectional survey. Exposure assumed associated relative risk function, rr, parameter theta. counterfactual scenario function exposure cft assumed. potential impact fraction defined Chan et al. (2023) :   \\[  \\text{PIF} = \\dfrac{\\mathbb{E}\\Big[RR(X;\\theta)\\Big] -    \\mathbb{E}\\Big[RR\\big(\\text{cft}(X);\\theta\\big)\\Big]}{\\mathbb{E}\\Big[RR(X;\\theta)\\Big]} \\] : \\(X\\) denotes individual-level matrix exposure covariates, \\(\\theta\\) represents additional parameters relative risk function, \\(RR(X,\\theta)\\) denotes relative risk exposure (covariates) level \\(X\\) given parameters \\(\\theta\\), \\(cft(X)\\) denotes counterfactual function applied exposure covariates, \\({\\mathbb{E}\\Big[RR(X;\\theta)\\Big]}\\) \\({\\mathbb{E}\\Big[RR(\\text{cft}(X);\\theta)\\Big]}\\) denote population average relative risk current (observed) conditions relative risk counterfactual scenario. \\(\\text{PIF}\\) represents potential impact fraction.","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/pif.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Potential Impact Fraction — pif","text":"","code":"pif(   design,   theta,   rr,   cft = NULL,   additional_theta_arguments,   n_bootstrap_samples = NULL,   theta_distribution = \"default\",   is_paf = FALSE,   weights = NULL,   .options.future = list(seed = TRUE),   ... )"},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/pif.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Potential Impact Fraction — pif","text":"design (survey.design, data.frame,tibble, svyrep.design) survey data structure. data comes survey set design survey::svydesign(). can also support survey::svrepdesign() design survey comes replicates. Finally, model can also accommodate data.frame tibble weights assuming simple random sampling without replacement. theta (vector/double) parameters relative risk function rr. rr (function/list) relative risk function two parameters: data.frame called X containing individual-level exposure covariates, theta (order). can also list several relative risk functions apply function different modelling scenario. cft (function/list) counterfactual function takes data.frame, X, individual-level exposure covariates returns new data.frame individual-level counterfactual exposure covariates. can also list several counterfactual functions apply function different modelling scenario. additional_theta_arguments additional information theta utilized obtaining bootstrap samples paramter. Options : (double) variance theta theta one dimensional asymptotical normality assumed (default). (vector) variances entry theta theta n-dimensional entries uncorrelated asymptotical normality assumed (default). (matrix) variance-covariance matrix theta theta n-dimensional entries correlated asymptotical normality assumed (default). list arguments pass via base::.call() theta_distribution simulate samples theta theta assumed asymptotically normally distributed. Optional n_bootstrap_samples (double) number bootstrap samples. svyrep.design passed argument, n_bootstrap_samples represents number number replicates design. theta_distribution (function) random number generator follows distribution estimator theta. default, theta assumed asymptotically normal thus theta_distribution set mvtnorm::rmvnorm() variance given additional_theta_arguments. number simulations theta_distribution function must parametrized parameter name n. is_paf (boolean) Whether function estimated Population Attributable Fraction (is_paf = TRUE) Potential Impact Fraction (is_paf = FALSE) weights (vector) following recommended version use svydesign object design can still use weights associate weights estimation. Beware might give accurate estimations variance uncertainty intervals. .options.future List additional options doFuture::%dofuture%(). ... Additional parameters svrep::as_bootstrap_design().","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/pif.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Potential Impact Fraction — pif","text":"pif_class() object containing bootstrap simulations potential impact fraction, average relative risk, average counterfactual applicable.","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/pif.html","id":"additional-parallelization-options","dir":"Reference","previous_headings":"","what":"Additional parallelization options","title":"Potential Impact Fraction — pif","text":"Faster computation occurs parallelization allows use cores machine. Parallelization utilizes  future::future() package. paralelization work need establish plan (see future::plan() information). common way create parallelization local machine :","code":"plan(multisession) #Start parallelization pif(...) plan(sequential) #Return to 'normal'"},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/pif.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Potential Impact Fraction — pif","text":"Chan CE, Zepeda-Tello R, Camacho-García-Formentí D, Cudhea F, Meza R, Rodrigues E, Spiegelman D, Barrientos-Gutierrez T, Zhou X (2023). “Nonparametric Estimation Potential Impact Fraction Population Attributable Fraction Individual-Level Aggregated Data.” 2207.03597.","code":""},{"path":[]},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/pif.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Potential Impact Fraction — pif","text":"","code":"# Use the ensanut dataset data(ensanut)  # EXAMPLE 1 # Setup the survey design options(survey.lonely.psu = \"adjust\") design <- survey::svydesign(data = ensanut, ids = ~1, weights = ~weight, strata = ~strata) rr <- function(X, theta) {   exp(-2 +     theta[1] * X[, \"age\"] + theta[2] * X[, \"systolic_blood_pressure\"] / 100) } cft <- function(X) {   X[, \"systolic_blood_pressure\"] <- X[, \"systolic_blood_pressure\"] - 5   return(X) } pif(design,   theta = log(c(1.05, 1.38)), rr, cft,   additional_theta_arguments = c(0.01, 0.03), n_bootstrap_samples = 10, ) #> ── Potential Impact Fraction (PIF) ───────────────────────────────────────────── #>     counterfactual   relative_risk potential_impact_fraction #> 1 Counterfactual_1 Relative_Risk_1              0.0116826670 #> 2 Counterfactual_1 Relative_Risk_1             -0.0001784108 #> 3 Counterfactual_1 Relative_Risk_1              0.0235437449 #>   average_relative_risk average_counterfactual           type #> 1              49697.33               48849.14 point_estimate #> 2            -266864.41             -262185.39     Lower 2.5% #> 3             366259.06              359883.67    Upper 97.5% #> ──────────────────────────────────────────────────────────────────────────────── #> • Number of bootstrap simulations: 10 #> ✖ A low number of bootstrap simulations will result in an unstable estimate. #> • Use `as.data.frame` to access values. #> • Use `summary` to save list of main results.  # EXAMPLE 2 # Now do the same but using a replicate design rep_design <- svrep::as_bootstrap_design(design, replicates = 10) pif(rep_design,   theta = log(c(1.05, 1.38)), rr, cft,   additional_theta_arguments = c(0.01, 0.03) ) #> ── Potential Impact Fraction (PIF) ───────────────────────────────────────────── #>     counterfactual   relative_risk potential_impact_fraction #> 1 Counterfactual_1 Relative_Risk_1               0.019710411 #> 2 Counterfactual_1 Relative_Risk_1               0.009555227 #> 3 Counterfactual_1 Relative_Risk_1               0.029865595 #>   average_relative_risk average_counterfactual           type #> 1              480346.1               470521.3 point_estimate #> 2            -2902961.4             -2843589.3     Lower 2.5% #> 3             3863653.6              3784632.0    Upper 97.5% #> ──────────────────────────────────────────────────────────────────────────────── #> • Number of bootstrap simulations: 10 #> ✖ A low number of bootstrap simulations will result in an unstable estimate. #> • Use `as.data.frame` to access values. #> • Use `summary` to save list of main results.  # EXAMPLE 3 # Calculate two different relative risks rr <- list(  function(X, theta) {exp(theta[1] * X[, \"systolic_blood_pressure\"] / 100)},  function(X, theta) {exp(theta[2] * X[, \"systolic_blood_pressure\"] / 100 + theta[3]* X[,\"age\"])} )  # Calculate three counterfactual scenarios of SBP reduction from 1 to 3 mmhg cft <- list( function(X){X[, \"systolic_blood_pressure\"]  <- X[, \"systolic_blood_pressure\"]  - 1; return(X)}, function(X){X[, \"systolic_blood_pressure\"]  <- X[, \"systolic_blood_pressure\"]  - 2; return(X)}, function(X){X[, \"systolic_blood_pressure\"]  <- X[, \"systolic_blood_pressure\"]  - 3; return(X)} )  pif(design,   theta = log(c(1.05, 1.38, 1.21)), rr, cft,   additional_theta_arguments = c(0.01, 0.03, 0.025),   n_bootstrap_samples = 10, ) #> ── Potential Impact Fraction (PIF) ───────────────────────────────────────────── #>      counterfactual   relative_risk potential_impact_fraction #> 1  Counterfactual_1 Relative_Risk_1              0.0006866338 #> 2  Counterfactual_2 Relative_Risk_1              0.0013718955 #> 3  Counterfactual_3 Relative_Risk_1              0.0020557870 #> 4  Counterfactual_1 Relative_Risk_2              0.0031625969 #> 5  Counterfactual_2 Relative_Risk_2              0.0063121574 #> 6  Counterfactual_3 Relative_Risk_2              0.0094487477 #> 7  Counterfactual_1 Relative_Risk_1             -0.0015423152 #> 8  Counterfactual_1 Relative_Risk_1              0.0029155829 #> 9  Counterfactual_2 Relative_Risk_1             -0.0030836996 #> 10 Counterfactual_2 Relative_Risk_1              0.0058274907 #> 11 Counterfactual_3 Relative_Risk_1             -0.0046241582 #> 12 Counterfactual_3 Relative_Risk_1              0.0087357322 #> 13 Counterfactual_1 Relative_Risk_2             -0.0009287064 #> 14 Counterfactual_1 Relative_Risk_2              0.0072539002 #> 15 Counterfactual_2 Relative_Risk_2             -0.0018366025 #> 16 Counterfactual_2 Relative_Risk_2              0.0144609172 #> 17 Counterfactual_3 Relative_Risk_2             -0.0027238747 #> 18 Counterfactual_3 Relative_Risk_2              0.0216213700 #>    average_relative_risk average_counterfactual           type #> 1           1.092660e+00           1.091795e+00 point_estimate #> 2           1.092660e+00           1.090931e+00 point_estimate #> 3           1.092660e+00           1.090069e+00 point_estimate #> 4           3.040966e+07           3.027446e+07 point_estimate #> 5           3.040966e+07           3.013986e+07 point_estimate #> 6           3.040966e+07           3.000587e+07 point_estimate #> 7           8.080367e-01           8.097297e-01     Lower 2.5% #> 8           1.377283e+00           1.373860e+00    Upper 97.5% #> 9           8.080367e-01           8.114210e-01     Lower 2.5% #> 10          1.377283e+00           1.370441e+00    Upper 97.5% #> 11          8.080367e-01           8.131108e-01     Lower 2.5% #> 12          1.377283e+00           1.367028e+00    Upper 97.5% #> 13         -1.102794e+08          -1.097862e+08     Lower 2.5% #> 14          1.710987e+08           1.703351e+08    Upper 97.5% #> 15         -1.102794e+08          -1.092952e+08     Lower 2.5% #> 16          1.710987e+08           1.695749e+08    Upper 97.5% #> 17         -1.102794e+08          -1.088064e+08     Lower 2.5% #> 18          1.710987e+08           1.688181e+08    Upper 97.5% #> ──────────────────────────────────────────────────────────────────────────────── #> • Number of bootstrap simulations: 10 #> ✖ A low number of bootstrap simulations will result in an unstable estimate. #> • Use `as.data.frame` to access values. #> • Use `summary` to save list of main results."},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/pif_class.html","id":null,"dir":"Reference","previous_headings":"","what":"pif_class class — pif_class","title":"pif_class class — pif_class","text":"S7::S7_class() saving bootstrap simulations potential impact fraction pif() population attributable fraction paf().","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/pif_class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"pif_class class — pif_class","text":"","code":"pif_class(   n_boot_simulations = class_missing,   is_paf = class_missing,   bootstrap_design = class_missing,   theta_simulations = class_missing,   pif_classulations = class_missing )"},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/pif_class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"pif_class class — pif_class","text":"n_boot_simulations Number bootstrap simulations is_paf (boolean) Whether function estimated Population Attributable Fraction (is_paf = TRUE) Potential Impact Fraction (is_paf = FALSE) bootstrap_design survey bootstrap design utilized estimating pif paf. theta_simulations Simulations parameter theta relative risk. pif_classulations Bootstrap simulations impact fraction attributable fraction.","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/pif_class.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"pif_class class — pif_class","text":"use class development .","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/pif_combine.html","id":null,"dir":"Reference","previous_headings":"","what":"Joint PIF: Combine impact fractions from independent and uncorrelated risk factors — pif_combine","title":"Joint PIF: Combine impact fractions from independent and uncorrelated risk factors — pif_combine","text":"function combine multiple  impact fractions independent uncorrelated risk factors. function follows formula Ezzati et al. (2003) :   \\[  \\text{PIF} = 1 - \\prod\\limits_{k} \\big(1 - \\text{PIF}_i) \\]","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/pif_combine.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Joint PIF: Combine impact fractions from independent and uncorrelated risk factors — pif_combine","text":"","code":"pif_combine(pif_class_1, pif_class_2, ...)"},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/pif_combine.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Joint PIF: Combine impact fractions from independent and uncorrelated risk factors — pif_combine","text":"pif_class_1 pif_class object (.e. estimation pif paf) pif_class_2 Another pif_class object (.e. estimation different pif paf) ... Additional pif_class objects (.e. estimations pif paf)","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/pif_combine.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Joint PIF: Combine impact fractions from independent and uncorrelated risk factors — pif_combine","text":"pif_aggregated object estimating potential impact fraction individual-level data multiple distinct impact fractions.","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/pif_combine.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Joint PIF: Combine impact fractions from independent and uncorrelated risk factors — pif_combine","text":"Ezzati M, Vander Hoorn S, Rodgers , Lopez AD, Mathers CD, Murray CJ (2003). “Estimates global regional potential health gains reducing multiple major risk factors.” Lancet, 362(9380), 271--280.","code":""},{"path":[]},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/pif_combine.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Joint PIF: Combine impact fractions from independent and uncorrelated risk factors — pif_combine","text":"","code":"# Use the ensanut dataset data(ensanut)  # EXAMPLE 1 # Setup the survey design options(survey.lonely.psu = \"adjust\") design <- survey::svydesign(data = ensanut, ids = ~1, weights = ~weight, strata = ~strata) rr_1 <- function(X, theta) {   exp(-2 +     theta[1] * X[, \"age\"] + theta[2] * X[, \"systolic_blood_pressure\"] / 100) }  rr_2 <- function(X, theta) {   exp(-1 +     theta[1] * X[, \"age\"] + X[, \"systolic_blood_pressure\"] ) }  rr_3 <- function(X, theta) {   exp(-1 +     theta[1] *X[, \"systolic_blood_pressure\"] ) }  cft <- function(X) {   X[, \"systolic_blood_pressure\"] <- X[, \"systolic_blood_pressure\"] - 5   return(X) }  pif_1 <- pif(design,   theta = log(c(1.25, 1.68)), rr_1, cft,   additional_theta_arguments = c(0.01, 0.03), n_bootstrap_samples = 10, )  pif_2 <- pif(design,   theta = log(c(1.12, 1.45)), rr_2, cft,   additional_theta_arguments = c(0.02, 0.025), n_bootstrap_samples = 10, )  pif_3 <- pif(design,   theta = 0.24, rr_3, cft,   additional_theta_arguments = 0.01, n_bootstrap_samples = 10, )  pif_combine(pif_1, pif_2, pif_3) #> ── Potential Impact Fraction (PIF) ───────────────────────────────────────────── #> # A tibble: 3 × 4 #>   counterfactual   relative_risk   potential_impact_fraction type           #>   <chr>            <chr>                               <dbl> <chr>          #> 1 Counterfactual_1 Relative_Risk_1                     0.998 point_estimate #> 2 Counterfactual_1 Relative_Risk_1                     0.996 Lower 2.5%     #> 3 Counterfactual_1 Relative_Risk_1                     1.00  Upper 97.5%    #> ──────────────────────────────────────────────────────────────────────────────── #> • Number of bootstrap simulations: 10 #> ✖ A low number of bootstrap simulations will result in an unstable estimate. #> • Use `as.data.frame` to access values. #> • Use `summary` to save list of main results."},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/pif_survey_bootstrap.html","id":null,"dir":"Reference","previous_headings":"","what":"Potential Impact Fraction via bootstrap for survey data — pif_survey_bootstrap","title":"Potential Impact Fraction via bootstrap for survey data — pif_survey_bootstrap","text":"Estimates potential impact fraction, pif, individual-level exposure data (covariates), X, cross-sectional survey. Exposure assumed associated relative risk function, rr, parameter theta. counterfactual scenario function exposure cft assumed. potential impact fraction defined Chan et al. (2023) :   \\[  \\text{PIF} = \\dfrac{\\mathbb{E}\\Big[RR(X;\\theta)\\Big] -    \\mathbb{E}\\Big[RR\\big(\\text{cft}(X);\\theta\\big)\\Big]}{\\mathbb{E}\\Big[RR(X;\\theta)\\Big]} \\] : \\(X\\) denotes individual-level matrix exposure covariates, \\(\\theta\\) represents additional parameters relative risk function, \\(RR(X,\\theta)\\) denotes relative risk exposure (covariates) level \\(X\\) given parameters \\(\\theta\\), \\(cft(X)\\) denotes counterfactual function applied exposure covariates, \\({\\mathbb{E}\\Big[RR(X;\\theta)\\Big]}\\) \\({\\mathbb{E}\\Big[RR(\\text{cft}(X);\\theta)\\Big]}\\) denote population average relative risk current (observed) conditions relative risk counterfactual scenario. \\(\\text{PIF}\\) represents potential impact fraction.","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/pif_survey_bootstrap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Potential Impact Fraction via bootstrap for survey data — pif_survey_bootstrap","text":"","code":"pif_survey_bootstrap(   design,   theta,   rr,   cft = NULL,   additional_theta_arguments,   n_bootstrap_samples = NULL,   theta_distribution = \"default\",   is_paf = FALSE,   .options.future = list(seed = TRUE),   ... )"},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/pif_survey_bootstrap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Potential Impact Fraction via bootstrap for survey data — pif_survey_bootstrap","text":"design (survey.design, data.frame,tibble, svyrep.design) survey data structure. data comes survey set design survey::svydesign(). can also support survey::svrepdesign() design survey comes replicates. Finally, model can also accommodate data.frame tibble weights assuming simple random sampling without replacement. theta (vector/double) parameters relative risk function rr. rr (function/list) relative risk function two parameters: data.frame called X containing individual-level exposure covariates, theta (order). can also list several relative risk functions apply function different modelling scenario. cft (function/list) counterfactual function takes data.frame, X, individual-level exposure covariates returns new data.frame individual-level counterfactual exposure covariates. can also list several counterfactual functions apply function different modelling scenario. additional_theta_arguments additional information theta utilized obtaining bootstrap samples paramter. Options : (double) variance theta theta one dimensional asymptotical normality assumed (default). (vector) variances entry theta theta n-dimensional entries uncorrelated asymptotical normality assumed (default). (matrix) variance-covariance matrix theta theta n-dimensional entries correlated asymptotical normality assumed (default). list arguments pass via base::.call() theta_distribution simulate samples theta theta assumed asymptotically normally distributed. Optional n_bootstrap_samples (double) number bootstrap samples. svyrep.design passed argument, n_bootstrap_samples represents number number replicates design. theta_distribution (function) random number generator follows distribution estimator theta. default, theta assumed asymptotically normal thus theta_distribution set mvtnorm::rmvnorm() variance given additional_theta_arguments. number simulations theta_distribution function must parametrized parameter name n. is_paf (boolean) Whether function estimated Population Attributable Fraction (is_paf = TRUE) Potential Impact Fraction (is_paf = FALSE) .options.future List additional options doFuture::%dofuture%(). ... Additional parameters svrep::as_bootstrap_design().","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/pif_survey_bootstrap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Potential Impact Fraction via bootstrap for survey data — pif_survey_bootstrap","text":"pif_class object estimating potential impact fraction individual-level data design using relative risk function rr counterfactual cft.","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/pif_survey_bootstrap.html","id":"additional-parallelization-options","dir":"Reference","previous_headings":"","what":"Additional parallelization options","title":"Potential Impact Fraction via bootstrap for survey data — pif_survey_bootstrap","text":"Faster computation occurs parallelization allows use cores machine. Parallelization utilizes  future::future() package. paralelization work need establish plan (see future::plan() information). common way create parallelization local machine :","code":"plan(multisession) #Start parallelization pif(...) plan(sequential) #Return to 'normal'"},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/pif_survey_bootstrap.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Potential Impact Fraction via bootstrap for survey data — pif_survey_bootstrap","text":"Chan CE, Zepeda-Tello R, Camacho-García-Formentí D, Cudhea F, Meza R, Rodrigues E, Spiegelman D, Barrientos-Gutierrez T, Zhou X (2023). “Nonparametric Estimation Potential Impact Fraction Population Attributable Fraction Individual-Level Aggregated Data.” 2207.03597.","code":""},{"path":[]},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/pifpaf-package.html","id":null,"dir":"Reference","previous_headings":"","what":"pifpaf: Potential Impact Fraction and Population Attributable Fraction from Cross-Sectional Data — pifpaf-package","title":"pifpaf: Potential Impact Fraction and Population Attributable Fraction from Cross-Sectional Data — pifpaf-package","text":"Uses generalized method estimate Potential Impact Fraction (PIF) Population Attributable Fraction (PAF) cross-sectional data. creates point-estimates, confidence intervals, estimates variance. addition, generates plots conducting sensitivity analysis.","code":""},{"path":[]},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/pifpaf-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"pifpaf: Potential Impact Fraction and Population Attributable Fraction from Cross-Sectional Data — pifpaf-package","text":"Maintainer: Rodrigo Zepeda-Tello rzepeda17@gmail.com Authors: Dalia Camacho-García-Formentí contributors: Tonatiuh Barrientos-Gutiérrez [contributor] Ana Basto-Abreu [contributor] Ariela Braverman-Bronstein [contributor] Dèsirée Vidaña-Pérez [contributor] Frederick Cudhea [contributor]","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/plot.pif_class.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the population attributable fraction or the potential impact fraction — plot.pif_class","title":"Plot the population attributable fraction or the potential impact fraction — plot.pif_class","text":"Creates ggplot2::ggplot() object containing information population attributable fraction potential impact fraction.","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/plot.pif_class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the population attributable fraction or the potential impact fraction — plot.pif_class","text":"","code":"# S3 method for pif_class plot(   x,   ...,   xaxis = c(\"relative_risk\", \"counterfactual\"),   title = NULL,   relative_risks = NULL,   counterfactuals = NULL )"},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/plot.pif_class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the population attributable fraction or the potential impact fraction — plot.pif_class","text":"x pif_class object ... Additional (currently unused) parameters xaxis Element x axis: counterfactual relative_risk title title plot relative_risks Vector relative risk names plot (set NULL plot ) counterfactuals Vector counterfactual names plot (set NULL plot )","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/plot.pif_class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the population attributable fraction or the potential impact fraction — plot.pif_class","text":"ggplot2 object image pif (paf)","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/plot.pif_class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot the population attributable fraction or the potential impact fraction — plot.pif_class","text":"","code":"# EXAMPLE 1 # Setup the survey design data(ensanut) options(survey.lonely.psu = \"adjust\") design <- survey::svydesign(data = ensanut, ids = ~1, weights = ~weight, strata = ~strata)  # Calculate two different relative risks rr <- list(  function(X, theta) {exp(theta[1] * X[, \"systolic_blood_pressure\"] / 100)},  function(X, theta) {exp(theta[2] * X[, \"systolic_blood_pressure\"] / 100 + theta[3]* X[,\"age\"])} )  # Calculate three counterfactual scenarios of SBP reduction from 1 to 3 mmhg cft <- list( function(X){X[, \"systolic_blood_pressure\"]  <- X[, \"systolic_blood_pressure\"]  - 1; return(X)}, function(X){X[, \"systolic_blood_pressure\"]  <- X[, \"systolic_blood_pressure\"]  - 2; return(X)}, function(X){X[, \"systolic_blood_pressure\"]  <- X[, \"systolic_blood_pressure\"]  - 3; return(X)} )  my_pif <- pif(design,   theta = log(c(1.05, 1.38, 1.21)), rr, cft,   additional_theta_arguments = c(0.01, 0.03, 0.025),   n_bootstrap_samples = 10, ) plot(my_pif)  plot(my_pif, xaxis = \"counterfactual\")"},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/print.pif_class.html","id":null,"dir":"Reference","previous_headings":"","what":"Print an impact or attributable fraction — print.pif_class","title":"Print an impact or attributable fraction — print.pif_class","text":"Method printing potential impact fraction population attributable fraction","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/print.pif_class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print an impact or attributable fraction — print.pif_class","text":"","code":"# S3 method for pif_class print(x, n = 10000, ...)"},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/print.pif_class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print an impact or attributable fraction — print.pif_class","text":"x pif_class object n Maximum number simulations print ... Additional arguments pass summary.pif_class","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/print.pif_class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print an impact or attributable fraction — print.pif_class","text":"","code":"#Example 1 data(ensanut) options(survey.lonely.psu = \"adjust\") design <- survey::svydesign(data = ensanut, ids = ~1, weights = ~weight, strata = ~strata) rr <- function(X, theta) {   exp(-2 +     theta[1] * X[, \"age\"] + theta[2] * X[, \"systolic_blood_pressure\"] / 100) } cft <- function(X) {   X[, \"systolic_blood_pressure\"] <- X[, \"systolic_blood_pressure\"] - 5   return(X) } pifsim <- pif(design,   theta = log(c(1.05, 1.38)), rr, cft,   additional_theta_arguments = c(0.01, 0.03), n_bootstrap_samples = 10, ) print(pifsim) #> ── Potential Impact Fraction (PIF) ───────────────────────────────────────────── #>     counterfactual   relative_risk potential_impact_fraction #> 1 Counterfactual_1 Relative_Risk_1               0.010532528 #> 2 Counterfactual_1 Relative_Risk_1              -0.001994805 #> 3 Counterfactual_1 Relative_Risk_1               0.023059861 #>   average_relative_risk average_counterfactual           type #> 1              1327.588               1316.699 point_estimate #> 2             -4684.146              -4644.551     Lower 2.5% #> 3              7339.322               7277.949    Upper 97.5% #> ──────────────────────────────────────────────────────────────────────────────── #> • Number of bootstrap simulations: 10 #> ✖ A low number of bootstrap simulations will result in an unstable estimate. #> • Use `as.data.frame` to access values. #> • Use `summary` to save list of main results. print(pifsim, n = 1) #> ── Potential Impact Fraction (PIF) ───────────────────────────────────────────── #> ℹ Too many simulations to print. #> ──────────────────────────────────────────────────────────────────────────────── #> • Number of bootstrap simulations: 10 #> ✖ A low number of bootstrap simulations will result in an unstable estimate. #> • Use `as.data.frame` to access values. #> • Use `summary` to save list of main results."},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/quantile_bootstrap.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract quantiles of the potential impact fraction or\npopulation attributable fraction bootstrap simulations — quantile_bootstrap","title":"Extract quantiles of the potential impact fraction or\npopulation attributable fraction bootstrap simulations — quantile_bootstrap","text":"Method obtaining variance-covariance matrix bootstrap simulations pif_class object (.e. point-estimate potential impact fraction population attributable fraction via bootstrap).","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/quantile_bootstrap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract quantiles of the potential impact fraction or\npopulation attributable fraction bootstrap simulations — quantile_bootstrap","text":"","code":"quantile_bootstrap(x, prob, ...)"},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/quantile_bootstrap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract quantiles of the potential impact fraction or\npopulation attributable fraction bootstrap simulations — quantile_bootstrap","text":"x pif_class object prob numeric vector probabilities values 0 1 ... additional arguments pass stats::quantile","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/quantile_bootstrap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract quantiles of the potential impact fraction or\npopulation attributable fraction bootstrap simulations — quantile_bootstrap","text":"","code":"#Example 1 data(ensanut) options(survey.lonely.psu = \"adjust\") design <- survey::svydesign(data = ensanut, ids = ~1, weights = ~weight, strata = ~strata) rr <- function(X, theta) {   exp(-2 +     theta[1] * X[, \"age\"] + theta[2] * X[, \"systolic_blood_pressure\"] / 100) } cft <- function(X) {   X[, \"systolic_blood_pressure\"] <- X[, \"systolic_blood_pressure\"] - 5   return(X) } pifsim <- pif(design,   theta = log(c(1.05, 1.38)), rr, cft,   additional_theta_arguments = c(0.01, 0.03), n_bootstrap_samples = 10, ) quantile_bootstrap(pifsim, c(0.1, 0.3, 0.5)) #>     counterfactual   relative_risk potential_impact_fraction #> 1 Counterfactual_1 Relative_Risk_1               0.006058022 #> 2 Counterfactual_1 Relative_Risk_1               0.013733630 #> 3 Counterfactual_1 Relative_Risk_1               0.017201760 #>   average_relative_risk average_counterfactual quantile #> 1           0.002041747            0.001998326      0.1 #> 2           0.277577252            0.270856565      0.3 #> 3           2.214570718            2.183890090      0.5"},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. generics tidy","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/sd_bootstrap.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract standard deviations of bootstrap simulations of potential impact fraction\nor population attributable fraction — sd_bootstrap","title":"Extract standard deviations of bootstrap simulations of potential impact fraction\nor population attributable fraction — sd_bootstrap","text":"Method obtaining standard deviartion bootstrap simulations x object (.e. point-estimate potential impact fraction population attributable fraction via bootstrap).","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/sd_bootstrap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract standard deviations of bootstrap simulations of potential impact fraction\nor population attributable fraction — sd_bootstrap","text":"","code":"sd_bootstrap(x, ...)"},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/sd_bootstrap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract standard deviations of bootstrap simulations of potential impact fraction\nor population attributable fraction — sd_bootstrap","text":"x pif_class object ... additional arguments pass stats::sd()","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/sd_bootstrap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract standard deviations of bootstrap simulations of potential impact fraction\nor population attributable fraction — sd_bootstrap","text":"","code":"#Example 1 data(ensanut) options(survey.lonely.psu = \"adjust\") design <- survey::svydesign(data = ensanut, ids = ~1, weights = ~weight, strata = ~strata) rr <- function(X, theta) {   exp(-2 +     theta[1] * X[, \"age\"] + theta[2] * X[, \"systolic_blood_pressure\"] / 100) } cft <- function(X) {   X[, \"systolic_blood_pressure\"] <- X[, \"systolic_blood_pressure\"] - 5   return(X) } pifsim <- pif(design,   theta = log(c(1.05, 1.38)), rr, cft,   additional_theta_arguments = c(0.01, 0.03), n_bootstrap_samples = 10, ) sd_bootstrap(pifsim) #>     counterfactual   relative_risk potential_impact_fraction #> 1 Counterfactual_1 Relative_Risk_1                0.00559187 #>   average_relative_risk average_counterfactual #> 1              72.06968               71.13817"},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/summary.pif_class.html","id":null,"dir":"Reference","previous_headings":"","what":"Return potential impact fraction or population attributable fraction summary — summary.pif_class","title":"Return potential impact fraction or population attributable fraction summary — summary.pif_class","text":"Method obtaining summary bootstrap simulations pif_class object (.e. point-estimate potential impact fraction population attributable fraction via bootstrap).","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/summary.pif_class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return potential impact fraction or population attributable fraction summary — summary.pif_class","text":"","code":"# S3 method for pif_class summary(   object,   parm = NULL,   level = 0.95,   method = c(\"wald\", \"percentile\"),   ... )"},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/summary.pif_class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return potential impact fraction or population attributable fraction summary — summary.pif_class","text":"object pif_class object parm specification parameters given confidence intervals, either vector numbers vector names. missing, parameters considered. level (double) Confidence level uncertainty interval. Defaults 0.95. method (string) either 'wald' (recommended) 'percentile' uncertainty intervals based upon bootstrap's percentile Wald-type approximation (see confidence interval section) ... Additional methods pass coef.pif_class()","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/summary.pif_class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return potential impact fraction or population attributable fraction summary — summary.pif_class","text":"","code":"#Example 1 data(ensanut) options(survey.lonely.psu = \"adjust\") design <- survey::svydesign(data = ensanut, ids = ~1, weights = ~weight, strata = ~strata) rr <- function(X, theta) {   exp(-2 +     theta[1] * X[, \"age\"] + theta[2] * X[, \"systolic_blood_pressure\"] / 100) } cft <- function(X) {   X[, \"systolic_blood_pressure\"] <- X[, \"systolic_blood_pressure\"] - 5   return(X) } pifsim <- pif(design,   theta = log(c(1.05, 1.38)), rr, cft,   additional_theta_arguments = c(0.01, 0.03), n_bootstrap_samples = 10, ) summary(pifsim) #> $Type #> [1] \"Potential Impact Fraction (PIF)\" #>  #> $Number_of_bootstrap_simulations #> [1] 10 #>  #> $Point_estimates #>     counterfactual   relative_risk potential_impact_fraction #> 1 Counterfactual_1 Relative_Risk_1                0.01412828 #>   average_relative_risk average_counterfactual #> 1              2798.433               2744.897 #>  #> $Confidence_intervals #>     counterfactual   relative_risk potential_impact_fraction #> 1 Counterfactual_1 Relative_Risk_1              -0.006969595 #> 2 Counterfactual_1 Relative_Risk_1               0.035226148 #>   average_relative_risk average_counterfactual        type #> 1             -16873.55              -16550.27  Lower 2.5% #> 2              22470.41               22040.06 Upper 97.5% #>"},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/tidy.pif_class.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform to tibble — tidy.pif_class","title":"Transform to tibble — tidy.pif_class","text":"Method transforming potential impact fraction population attributable fraction data.frame","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/tidy.pif_class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform to tibble — tidy.pif_class","text":"","code":"# S3 method for pif_class tidy(x, ...)"},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/tidy.pif_class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform to tibble — tidy.pif_class","text":"x pif_class object ... Additional methods pass summary.pif_class()","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/tidy.pif_class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transform to tibble — tidy.pif_class","text":"","code":"#Example 1 data(ensanut) options(survey.lonely.psu = \"adjust\") design <- survey::svydesign(data = ensanut, ids = ~1, weights = ~weight, strata = ~strata) rr <- function(X, theta) {   exp(-2 +     theta[1] * X[, \"age\"] + theta[2] * X[, \"systolic_blood_pressure\"] / 100) } cft <- function(X) {   X[, \"systolic_blood_pressure\"] <- X[, \"systolic_blood_pressure\"] - 5   return(X) } pifsim <- pif(design,   theta = log(c(1.05, 1.38)), rr, cft,   additional_theta_arguments = c(0.01, 0.03), n_bootstrap_samples = 10, ) tidy(pifsim) #>     counterfactual   relative_risk potential_impact_fraction #> 1 Counterfactual_1 Relative_Risk_1                0.02150538 #> 2 Counterfactual_1 Relative_Risk_1                0.01358605 #> 3 Counterfactual_1 Relative_Risk_1                0.02942470 #>   average_relative_risk average_counterfactual           type #> 1              131427.4               128663.3 point_estimate #> 2             -502060.7              -491287.7     Lower 2.5% #> 3              764915.5               748614.4    Upper 97.5%"},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/validate_cft.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate the counterfactual function — validate_cft","title":"Validate the counterfactual function — validate_cft","text":"function validates cft argument valid","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/validate_cft.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate the counterfactual function — validate_cft","text":"","code":"validate_cft(cft, is_paf)"},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/validate_cft.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate the counterfactual function — validate_cft","text":"`rr` function","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/validate_cft.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate the counterfactual function — validate_cft","text":"counterfactual function cft","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/validate_confidence_level.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate confidence level — validate_confidence_level","title":"Validate confidence level — validate_confidence_level","text":"function takes confidence level input. can inputed : number 0 1. number 1 100 divided 100. input generates error.","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/validate_confidence_level.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate confidence level — validate_confidence_level","text":"","code":"validate_confidence_level(confidence_level = 0.95)"},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/validate_confidence_level.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate confidence level — validate_confidence_level","text":"confidence_level (double) Confidence level uncertainty interval. 0 1 uses . 1 100 divides 100 transform probability. Defaults 0.95.","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/validate_confidence_level.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate confidence level — validate_confidence_level","text":"(double) list containing confidence level 0 1, values alpha 1 - alpha/2.","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/validate_is_paf.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate the is_paf parameter — validate_is_paf","title":"Validate the is_paf parameter — validate_is_paf","text":"function validates is_paf argument valid","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/validate_is_paf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate the is_paf parameter — validate_is_paf","text":"","code":"validate_is_paf(is_paf)"},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/validate_is_paf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate the is_paf parameter — validate_is_paf","text":"`is_paf` boolean determining pif estimation actually paf","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/validate_is_paf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate the is_paf parameter — validate_is_paf","text":"boolean indicating whether paf pif","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/validate_n_boostrap_samples.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate n_bootstrap_samples — validate_n_boostrap_samples","title":"Validate n_bootstrap_samples — validate_n_boostrap_samples","text":"Internal function validate number bootstrap samples","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/validate_n_boostrap_samples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate n_bootstrap_samples — validate_n_boostrap_samples","text":"","code":"validate_n_boostrap_samples(n_bootstrap_samples)"},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/validate_n_boostrap_samples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate n_bootstrap_samples — validate_n_boostrap_samples","text":"n_bootstrap_samples number samples boostrap","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/validate_n_boostrap_samples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate n_bootstrap_samples — validate_n_boostrap_samples","text":"valid n_bootstrap_samples (integer)","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/validate_pifs.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate list of potential impact fractions — validate_pifs","title":"Validate list of potential impact fractions — validate_pifs","text":"Internal function validate list potential impact fractions","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/validate_pifs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate list of potential impact fractions — validate_pifs","text":"","code":"validate_pifs(...)"},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/validate_pifs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate list of potential impact fractions — validate_pifs","text":"... Additional pif_class objects (.e. estimations pif paf)","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/validate_pifs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate list of potential impact fractions — validate_pifs","text":"Boolean variable indicating whether input valid","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/validate_rr.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate the relative risk function — validate_rr","title":"Validate the relative risk function — validate_rr","text":"function validates rr argument valid","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/validate_rr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate the relative risk function — validate_rr","text":"","code":"validate_rr(rr)"},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/validate_rr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate the relative risk function — validate_rr","text":"`rr` function","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/validate_rr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate the relative risk function — validate_rr","text":"relative risk function rr","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/validate_survey_design.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate design — validate_survey_design","title":"Validate design — validate_survey_design","text":"Internal function validate design whether svyrep.design survey.design.","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/validate_survey_design.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate design — validate_survey_design","text":"","code":"validate_survey_design(design, n_bootstrap_samples, ...)"},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/validate_survey_design.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate design — validate_survey_design","text":"design svyrep.design, survey.design survey.design2 object.","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/validate_survey_design.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate design — validate_survey_design","text":"svyrep.design. design already svyrep.design returns design. Else returns bootstrap svyrep.design many n_bootstrap_samples","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/validate_theta_arguments.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate the theta_distribution function — validate_theta_arguments","title":"Validate the theta_distribution function — validate_theta_arguments","text":"function validates theta_distribution indeed function one arguments n.","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/validate_theta_arguments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate the theta_distribution function — validate_theta_arguments","text":"","code":"validate_theta_arguments(theta_distribution, additional_theta_arguments, theta)"},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/validate_theta_arguments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate the theta_distribution function — validate_theta_arguments","text":"`theta_distribution` random number simulator theta `additional_theta_arguments` list additional arguments use theta_distribution","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/validate_theta_arguments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate the theta_distribution function — validate_theta_arguments","text":"random number generating function simulate theta .","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/validate_theta_distribution.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate the theta_distribution function — validate_theta_distribution","title":"Validate the theta_distribution function — validate_theta_distribution","text":"function validates theta_distribution indeed function one arguments n.","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/validate_theta_distribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate the theta_distribution function — validate_theta_distribution","text":"","code":"validate_theta_distribution(theta_distribution, additional_theta_arguments)"},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/validate_theta_distribution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate the theta_distribution function — validate_theta_distribution","text":"`theta_distribution` random number simulator theta `additional_theta_arguments` list additional arguments use theta_distribution","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/validate_theta_distribution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate the theta_distribution function — validate_theta_distribution","text":"random number generating function simulate theta .","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/var_bootstrap.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the variance of bootstrap simulations of potential impact fraction\nor population attributable fraction — var_bootstrap","title":"Extract the variance of bootstrap simulations of potential impact fraction\nor population attributable fraction — var_bootstrap","text":"Method obtaining variance bootstrap simulations x object (.e. point-estimate potential impact fraction population attributable fraction via bootstrap).","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/var_bootstrap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the variance of bootstrap simulations of potential impact fraction\nor population attributable fraction — var_bootstrap","text":"","code":"var_bootstrap(x, ...)"},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/var_bootstrap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the variance of bootstrap simulations of potential impact fraction\nor population attributable fraction — var_bootstrap","text":"x pif_class object ... additional arguments pass stats::var()","code":""},{"path":"https://rodrigozepeda.github.io/pifpaf/reference/var_bootstrap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract the variance of bootstrap simulations of potential impact fraction\nor population attributable fraction — var_bootstrap","text":"","code":"#Example 1 data(ensanut) options(survey.lonely.psu = \"adjust\") design <- survey::svydesign(data = ensanut, ids = ~1, weights = ~weight, strata = ~strata) rr <- function(X, theta) {   exp(-2 +     theta[1] * X[, \"age\"] + theta[2] * X[, \"systolic_blood_pressure\"] / 100) } cft <- function(X) {   X[, \"systolic_blood_pressure\"] <- X[, \"systolic_blood_pressure\"] - 5   return(X) } pifsim <- pif(design,   theta = log(c(1.05, 1.38)), rr, cft,   additional_theta_arguments = c(0.01, 0.03), n_bootstrap_samples = 10, ) var_bootstrap(pifsim) #>     counterfactual   relative_risk potential_impact_fraction #> 1 Counterfactual_1 Relative_Risk_1              4.357334e-05 #>   average_relative_risk average_counterfactual #> 1          1.454987e+13           1.436173e+13"}]
